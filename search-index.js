var searchIndex = new Map(JSON.parse('[["xm125_radar_monitor",{"t":"SPGPSNNHHCNNNHHCNCHCNNHHHHCNHHHHHHHCHNNNNPPPPPPFPPGPPPGPPPPGGPPPPPPPGPPPGPPPPNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNONNNNNNNNNNNNNNNNNOOOONNNNNNNOOHOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOFFONNNNNNNNNNOONNNNOONNOOONNNNNNNNNNPPPPPPPPPPPPPPPGIPNNNNNNNNNNNNNNNOOOOPPFGPNNNNNNNNNNNONNNNONNNNNNNNNNONNNNNNNNNNNNNNNFONNNONNONNNNNNNNNNNNONNSSSSSSSSSSSSSPGFSSSSSSSSSSSSSSSSSSSPFSSSSSSSSSSSSSGPPFPPPPSPPPFGSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSPFFONONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNONNOONNNNNNNNNNNONNNNNNNNNNNNNNOOONNNNNNNNNOOONONOOOOONNNNONOOOONNNONNNNNNNNNNNONOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["APP_NAME","BootloaderMode","DeviceMode","RunMode","VERSION","borrow","borrow_mut","check_control_script","check_device_presence","cli","clone","clone_into","clone_to_uninit","configure_detector","configure_radar_from_cli","device_manager","eq","error","execute_command","firmware","fmt","from","get_current_firmware_info","get_current_firmware_info_for_check","handle_bootloader_command","handle_firmware_command","i2c","into","is_likely_unprogrammed_module","main","monitor_measurements","output_response","print_banner","print_banner_with_detected_mode","print_unprogrammed_module_help","radar","run","to_owned","try_from","try_into","type_id","Bootloader","Breathing","","","Calibrate","Check","Cli","Combined","","Commands","Config","Connect","Csv","DetectorMode","Disconnect","Distance","","Firmware","FirmwareAction","FirmwareType","Human","Info","Json","Long","Measure","Medium","Monitor","OutputFormat","Presence","","","PresenceRange","Short","Status","Update","Verify","augment_args","augment_args_for_update","augment_subcommands","","augment_subcommands_for_update","","auto_reconnect","auto_update_firmware","auto_verify_firmware","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","command","","command_for_update","control_script","firmware_path","fmt","","","","","","format","from","","","","","","","from_arg_matches","","","from_arg_matches_mut","","","get_i2c_device_path","group_id","has_subcommand","","i2c_address","i2c_bus","i2c_device","int_pin","into","","","","","","","mode","no_auto_reconnect","parse_i2c_address","quiet","timeout","to_owned","","","","","","to_possible_value","","","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","update_from_arg_matches","","","update_from_arg_matches_mut","","","value_variants","","","","verbose","wakeup_pin","action","count","force","frame_rate","interval","length","presence_range","reset","save_to","sensitivity","start","firmware_type","","force","verify","DeviceManager","DeviceState","app_id","borrow","","borrow_mut","","check_device_presence","check_i2c_bus_presence","clone","clone_into","clone_to_uninit","extract_i2c_bus_number","firmware_manager","firmware_type","fmt","from","","get_device_info","i2c_address","i2c_device_path","into","","is_present","is_responsive","needs_reset","new","reset_to_run_mode","to_owned","try_from","","try_into","","type_id","","update_firmware","CalibrationRequired","Config","DeviceError","Err","FirmwareError","I2c","InitializationFailed","InvalidParameters","InvalidResponse","Io","Json","MeasurementFailed","ModuleNotProgrammed","NotConnected","Ok","RadarError","Result","Timeout","borrow","borrow_mut","fmt","","from","","","","","into","source","to_string","try_from","try_into","type_id","message","","response","timeout","Breathing","Distance","FirmwareManager","FirmwareType","Presence","application_id","binary_filename","borrow","","borrow_mut","","calculate_binary_checksum","check_control_script","clone","clone_into","clone_to_uninit","control_script","default","display_name","enter_bootloader_mode","eq","firmware_path","firmware_update_needed","flash_firmware","fmt","from","","","","from_app_id","get_firmware_checksum","get_firmware_path","i2c_address","into","","new","reset_to_run_mode","to_owned","try_from","","try_into","","type_id","","update_firmware","update_firmware_with_verification","verify_device_in_run_mode","verify_firmware","I2cDevice","address","borrow","borrow_mut","configure_gpio","device","export_gpio","from","int_pin","into","is_module_ready","new","read_gpio_value","read_register","set_gpio_direction","set_gpio_value","sleep_module","try_from","try_into","type_id","wake_up_module","wakeup_pin","write_read_register","write_register","BREATHING_DISTANCE_DETERMINATION_DURATION_S_DEFAULT","BREATHING_END_DEFAULT","BREATHING_FRAME_RATE_DEFAULT","BREATHING_HIGHEST_BREATHING_RATE_DEFAULT","BREATHING_HWAAS_DEFAULT","BREATHING_INTRA_DETECTION_THRESHOLD_DEFAULT","BREATHING_LOWEST_BREATHING_RATE_DEFAULT","BREATHING_NUM_DISTANCES_TO_ANALYZE_DEFAULT","BREATHING_PROFILE_DEFAULT","BREATHING_START_DEFAULT","BREATHING_SWEEPS_PER_FRAME_DEFAULT","BREATHING_TIME_SERIES_LENGTH_S_DEFAULT","BREATHING_USE_PRESENCE_PROCESSOR_DEFAULT","Breathing","BreathingAppState","BreathingMeasurement","CALIBRATION_TIMEOUT","CMD_APPLY_CONFIGURATION","CMD_APPLY_CONFIG_AND_CALIBRATE","CMD_BREATHING_APPLY_CONFIGURATION","CMD_BREATHING_START_APP","CMD_BREATHING_STOP_APP","CMD_CALIBRATE","CMD_DISABLE_CONTINUOUS_MODE","CMD_DISABLE_DETECTOR","CMD_ENABLE_CONTINUOUS_MODE","CMD_ENABLE_DETECTOR","CMD_ENABLE_PRESENCE_DETECTOR","CMD_MEASURE_DISTANCE","CMD_MEASURE_PRESENCE","CMD_PRESENCE_APPLY_CONFIGURATION","CMD_PRESENCE_START","CMD_PRESENCE_STOP","CMD_RECALIBRATE","CMD_RESET_MODULE","Combined","CombinedMeasurement","DISTANCE_CLOSE_RANGE_LEAKAGE_CANCELLATION_DEFAULT","DISTANCE_END_DEFAULT","DISTANCE_FIXED_AMPLITUDE_THRESHOLD_VALUE_DEFAULT","DISTANCE_FIXED_STRENGTH_THRESHOLD_VALUE_DEFAULT","DISTANCE_MAX_PROFILE_DEFAULT","DISTANCE_MAX_STEP_LENGTH_DEFAULT","DISTANCE_NUM_FRAMES_RECORDED_THRESHOLD_DEFAULT","DISTANCE_PEAK_SORTING_DEFAULT","DISTANCE_REFLECTOR_SHAPE_DEFAULT","DISTANCE_SIGNAL_QUALITY_DEFAULT","DISTANCE_START_DEFAULT","DISTANCE_THRESHOLD_METHOD_DEFAULT","DISTANCE_THRESHOLD_SENSITIVITY_DEFAULT","DetectorMode","DetermineDistance","Distance","DistanceMeasurement","EstimateBreathingRate","Init","IntraPresence","Long","MEASUREMENT_TIMEOUT","Medium","NoPresence","Presence","PresenceMeasurement","PresenceRange","REG_APPLICATION_ID","REG_BREATHING_APP_STATE","REG_BREATHING_DISTANCE_DETERMINATION_DURATION_S","REG_BREATHING_END","REG_BREATHING_FRAME_RATE","REG_BREATHING_HIGHEST_BREATHING_RATE","REG_BREATHING_HWAAS","REG_BREATHING_INTRA_DETECTION_THRESHOLD","REG_BREATHING_LOWEST_BREATHING_RATE","REG_BREATHING_NUM_DISTANCES_TO_ANALYZE","REG_BREATHING_PROFILE","REG_BREATHING_RATE","REG_BREATHING_RESULT","REG_BREATHING_START","REG_BREATHING_SWEEPS_PER_FRAME","REG_BREATHING_TIME_SERIES_LENGTH_S","REG_BREATHING_USE_PRESENCE_PROCESSOR","REG_CLOSE_RANGE_LEAKAGE_CANCELLATION","REG_COMMAND","REG_DETECTOR_STATUS","REG_DISTANCE_RESULT","REG_END_CONFIG","REG_FIXED_AMPLITUDE_THRESHOLD_VALUE","REG_FIXED_STRENGTH_THRESHOLD_VALUE","REG_FRAME_RATE","REG_INTER_DETECTION_THRESHOLD","REG_INTER_PRESENCE_SCORE","REG_INTRA_DETECTION_THRESHOLD","REG_INTRA_PRESENCE_SCORE","REG_MAX_PROFILE","REG_MAX_STEP_LENGTH","REG_MEASURE_COUNTER","REG_NUM_FRAMES_RECORDED_THRESHOLD","REG_PEAK0_DISTANCE","REG_PEAK0_STRENGTH","REG_PEAK_SORTING","REG_PRESENCE_DISTANCE","REG_PRESENCE_END","REG_PRESENCE_RESULT","REG_PRESENCE_START","REG_PROTOCOL_STATUS","REG_REFLECTOR_SHAPE","REG_SENSOR_INFO","REG_SIGNAL_QUALITY","REG_START_CONFIG","REG_THRESHOLD_METHOD","REG_THRESHOLD_SENSITIVITY","REG_VERSION","STATUS_ALL_ERROR_MASK","STATUS_ALL_OK_MASK","STATUS_BUSY","STATUS_CALIBRATION_DONE","STATUS_CONFIG_APPLY_ERROR","STATUS_CONFIG_APPLY_OK","STATUS_CONFIG_CREATE_ERROR","STATUS_CONFIG_CREATE_OK","STATUS_DETECTOR_CALIBRATE_ERROR","STATUS_DETECTOR_CREATE_ERROR","STATUS_DETECTOR_CREATE_OK","STATUS_DETECTOR_READY","STATUS_DISTANCE_BUSY","STATUS_DISTANCE_CALIBRATION_BUFFER_ERROR","STATUS_DISTANCE_CALIBRATION_BUFFER_OK","STATUS_DISTANCE_CONFIG_APPLY_ERROR","STATUS_DISTANCE_CONFIG_APPLY_OK","STATUS_DISTANCE_CONFIG_CREATE_ERROR","STATUS_DISTANCE_CONFIG_CREATE_OK","STATUS_DISTANCE_DETECTOR_BUFFER_ERROR","STATUS_DISTANCE_DETECTOR_BUFFER_OK","STATUS_DISTANCE_DETECTOR_CALIBRATE_ERROR","STATUS_DISTANCE_DETECTOR_CALIBRATE_OK","STATUS_DISTANCE_DETECTOR_CREATE_ERROR","STATUS_DISTANCE_DETECTOR_CREATE_OK","STATUS_DISTANCE_DETECTOR_ERROR","STATUS_DISTANCE_RSS_REGISTER_ERROR","STATUS_DISTANCE_RSS_REGISTER_OK","STATUS_DISTANCE_SENSOR_BUFFER_ERROR","STATUS_DISTANCE_SENSOR_BUFFER_OK","STATUS_DISTANCE_SENSOR_CALIBRATE_ERROR","STATUS_DISTANCE_SENSOR_CALIBRATE_OK","STATUS_DISTANCE_SENSOR_CREATE_ERROR","STATUS_DISTANCE_SENSOR_CREATE_OK","STATUS_ERROR","STATUS_MEASUREMENT_READY","STATUS_PRESENCE_BUSY","STATUS_PRESENCE_CONFIG_APPLY_ERROR","STATUS_PRESENCE_CONFIG_APPLY_OK","STATUS_PRESENCE_CONFIG_CREATE_ERROR","STATUS_PRESENCE_CONFIG_CREATE_OK","STATUS_PRESENCE_DETECTOR_BUFFER_ERROR","STATUS_PRESENCE_DETECTOR_BUFFER_OK","STATUS_PRESENCE_DETECTOR_CREATE_ERROR","STATUS_PRESENCE_DETECTOR_CREATE_OK","STATUS_PRESENCE_DETECTOR_ERROR","STATUS_PRESENCE_RSS_REGISTER_ERROR","STATUS_PRESENCE_RSS_REGISTER_OK","STATUS_PRESENCE_SENSOR_BUFFER_ERROR","STATUS_PRESENCE_SENSOR_BUFFER_OK","STATUS_PRESENCE_SENSOR_CALIBRATE_ERROR","STATUS_PRESENCE_SENSOR_CALIBRATE_OK","STATUS_PRESENCE_SENSOR_CREATE_ERROR","STATUS_PRESENCE_SENSOR_CREATE_OK","STATUS_RSS_REGISTER_OK","STATUS_SENSOR_CALIBRATE_ERROR","STATUS_SENSOR_CALIBRATE_OK","STATUS_SENSOR_CREATE_ERROR","STATUS_SENSOR_CREATE_OK","Short","XM125Config","XM125Radar","app_state","auto_connect","auto_reconnect","borrow","","","","","","","","","borrow_mut","","","","","","","","","breathing_rate","calibrate","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","config","configure_detector","configure_presence_range","connect","connect_async","continuous_mode","default","deserialize","","","","","","","detector_mode","disconnect","display_name","distance","","eq","","","fmt","","","","","","","","frame_rate","from","","","","","","","","","from_u32","get_detector_mode","get_info","get_status","get_status_raw","i2c","inter_detection_threshold","inter_presence_score","into","","","","","","","","","intra_detection_threshold","intra_presence_score","is_calibrated","is_connected","","is_continuous_monitoring","last_calibration","last_measurement","length_m","max_profile","max_step_length","measure_breathing","measure_combined","measure_distance","measure_presence","measurement_interval_ms","new","presence","presence_detected","presence_distance","presence_range","read_application_id","read_distance_result","reset_xm125_to_run_mode","result_ready","send_command","serialize","","","","","","","set_config","set_detector_mode","start_continuous_monitoring","start_m","stop_continuous_monitoring","strength","sweeps_per_frame","temperature","","threshold_sensitivity","timestamp","","","","to_owned","","","","","","","","try_from","","","","","","","","","try_into","","","","","","","","","type_id","","","","","","","","","validate_firmware_compatibility","wait_for_calibration","wait_for_measurement","write_breathing_configuration","write_distance_configuration"],"q":[[0,"xm125_radar_monitor"],[41,"xm125_radar_monitor::cli"],[206,"xm125_radar_monitor::cli::Commands"],[217,"xm125_radar_monitor::cli::FirmwareAction"],[221,"xm125_radar_monitor::device_manager"],[257,"xm125_radar_monitor::error"],[290,"xm125_radar_monitor::error::RadarError"],[294,"xm125_radar_monitor::firmware"],[342,"xm125_radar_monitor::i2c"],[366,"xm125_radar_monitor::radar"],[731,"core::result"],[732,"core::option"],[733,"core::fmt"],[734,"core::any"],[735,"clap_builder::builder::command"],[736,"alloc::string"],[737,"clap_builder::parser::matches::arg_matches"],[738,"clap_builder"],[739,"clap_builder::util::id"],[740,"clap_builder::builder::possible_value"],[741,"linux_embedded_hal::i2c"],[742,"serde_json::error"],[743,"config::error"],[744,"std::io::error"],[745,"core::error"],[746,"alloc::vec"],[747,"core::time"],[748,"serde_core::de"],[749,"serde_core::ser"],[750,"chrono::datetime"]],"i":"`A``0`00```000```0```00`````0`````````0000An0CbCf2Bj`31`33Cd`4324``040Aj505`543`0522n0636300006352410635241635241635241635241000006352410063524106306300630000063524100`006352415241063524106352410635241063063524100DfDhDjDl200Dn311E`Eb11``EdEf10100111001101000011110010101010j00Hn11111111110``1111111111111111FdFfFhFjBf0``000Eh1010011100101000101111000010010101010000`Fl0000000000000000000000`````````````Gl`````````````````````0```````````````Gh1`000Gn`012`````````````````````````````````````````````````````````````````````````````````````````````````````````````0``GfAdGj153H`HbHd75348621075354862107538621075386210753444444386210753472086786210753348621075374444431486210753314444443334444340113444548621075444342325321058621075348621075348621075348621075344444","f":"{{}b}```0{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}{{l{hj}}}}{{{b{n}}}{{l{A`j}}}}`{{{b{A`}}}A`}{{b{b{dc}}}h{}}{{bAb}h}{{{b{dAd}}{Ah{Af}}{Ah{Af}}{Ah{Aj}}{Ah{Af}}{Ah{Af}}}h}{{{b{dAd}}{b{n}}}{{l{hj}}}}`{{{b{A`}}{b{A`}}}Al}`{{An{b{dAd}}{b{n}}}{{l{hj}}}}`{{{b{A`}}{b{dB`}}}Bb}{cc{}}{{{b{dAd}}}{{l{Bdj}}}}{{{b{n}}}{{l{{Bh{BdBf}}j}}}}{{Al{b{n}}}{{l{hj}}}}{{Bj{b{n}}}{{l{hj}}}}`{{}c{}}{{{b{n}}}Al}{{}h}{{{b{dAd}}{b{n}}Bl{Ah{Bd}}}{{l{hj}}}}{{{b{n}}{b{f}}{b{f}}{b{f}}{b{f}}}{{l{hj}}}}{{{b{n}}}h}{{{b{n}}{Ah{{b{f}}}}}h}1`{n{{l{hj}}}}{bc{}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{bBn}````````````````````````````````````{C`C`}00000{nAl}00{b{{b{c}}}{}}000000{{{b{d}}}{{b{dc}}}{}}000000{{{b{An}}}An}{{{b{Bj}}}Bj}{{{b{Cb}}}Cb}{{{b{Cd}}}Cd}{{{b{Cf}}}Cf}{{{b{Aj}}}Aj}{{b{b{dc}}}h{}}00000{{bAb}h}00000{{}C`}{nAh}1{nCh}0{{{b{An}}{b{dB`}}}Bb}{{{b{Bj}}{b{dB`}}}Bb}{{{b{Cb}}{b{dB`}}}Bb}{{{b{Cd}}{b{dB`}}}Bb}{{{b{Cf}}{b{dB`}}}Bb}{{{b{Aj}}{b{dB`}}}Bb}{nCd}{cc{}}000000{{{b{Cj}}}{{l{nCl}}}}{{{b{Cj}}}{{l{AnCl}}}}{{{b{Cj}}}{{l{BjCl}}}}{{{b{dCj}}}{{l{nCl}}}}{{{b{dCj}}}{{l{AnCl}}}}{{{b{dCj}}}{{l{BjCl}}}}{{{b{n}}}Ch}{{}{{Ah{Cn}}}}{{{b{f}}}Al}0{nD`}{nAb}{nAh}0{{}c{}}000000{nCf}{nAl}{{{b{f}}}{{l{D`Ch}}}}1{nBl}{bc{}}00000{{{b{Cb}}}{{Ah{Db}}}}{{{b{Cd}}}{{Ah{Db}}}}{{{b{Cf}}}{{Ah{Db}}}}{{{b{Aj}}}{{Ah{Db}}}}{c{{l{e}}}{}{}}000000{{}{{l{c}}}{}}000000{bBn}000000{{{b{dn}}{b{Cj}}}{{l{hCl}}}}{{{b{dAn}}{b{Cj}}}{{l{hCl}}}}{{{b{dBj}}{b{Cj}}}{{l{hCl}}}}{{{b{dn}}{b{dCj}}}{{l{hCl}}}}{{{b{dAn}}{b{dCj}}}{{l{hCl}}}}{{{b{dBj}}{b{dCj}}}{{l{hCl}}}}{{}{{b{{Dd{Cb}}}}}}{{}{{b{{Dd{Cd}}}}}}{{}{{b{{Dd{Cf}}}}}}{{}{{b{{Dd{Aj}}}}}}{nAl}{nAh}{DfBj}{DhAh}{DjAl}{DlAh}{DhBl}11{DnAl}422{E`Cb}{EbAh}{E`Al}0``{EdAh}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Ef}}}Ed}{{{b{Ef}}Ab}Al}{{{b{Ed}}}Ed}{{b{b{dc}}}h{}}{{bAb}h}{{{b{Ef}}}Ab}{EfEh}9{{{b{Ed}}{b{dB`}}}Bb}{cc{}}0{{{b{Ef}}}{{l{Chj}}}}{EfD`}{EfCh}{{}c{}}0{EdAl}00{{ChD`ChCh}Ef}{{{b{Ef}}}{{l{hj}}}}{bc{}}{c{{l{e}}}{}{}}0{{}{{l{c}}}{}}0{bBn}0{{{b{Ef}}BfAl}{{l{hj}}}}``````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{j}}{b{dB`}}}Bb}0{Ejj}{Elj}{cc{}}{Enj}{F`j}{{}c{}}{{{b{j}}}{{Ah{{b{Fb}}}}}}{bCh}>=<{FdCh}{FfCh}{FhCh}{FjBl}`````{BfBd}{Bf{{b{f}}}}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Eh}}Bf}{{l{Chj}}}}{{{b{Eh}}}{{l{hj}}}}{{{b{Bf}}}Bf}{{b{b{dc}}}h{}}{{bAb}h}{EhCh}{{}Eh}95{{{b{Bf}}{b{Bf}}}Al}2{{{b{Eh}}BdBf}{{l{Alj}}}}{{{b{Eh}}{b{f}}}{{l{hj}}}}{{{b{Bf}}{b{dB`}}}Bb}{cc{}}{CbBf}1{CfBf}{BdBf}>{{{b{Eh}}Bf}Ch}{EhD`}{{}c{}}0{{{b{f}}{b{f}}D`}Eh}{{{b{Eh}}}{{l{hj}}}}{bc{}}{c{{l{e}}}{}{}}0{{}{{l{c}}}{}}0{bBn}0{{{b{Eh}}Bf}{{l{hj}}}}{{{b{Eh}}BfAl}{{l{hj}}}}{{{b{Eh}}}Al}2`{FlD`}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{dFl}}{Ah{Bd}}{Ah{Bd}}}{{l{hj}}}}{FlFn}{{{b{Fl}}Bd}{{l{hj}}}}{cc{}}{FlAh}{{}c{}}{{{b{Fl}}}{{l{Alj}}}}{{{b{f}}D`}{{l{Flj}}}}{{{b{Fl}}Bd}{{l{Abj}}}}{{{b{dFl}}D`G`}{{l{{Gb{Ab}}j}}}}{{{b{Fl}}Bd{b{f}}}{{l{hj}}}}{{{b{Fl}}BdAb}{{l{hj}}}}{{{b{Fl}}}{{l{hj}}}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{bBn}3;{{{b{dFl}}D`{b{{Dd{Ab}}}}G`}{{l{{Gb{Ab}}j}}}}{{{b{dFl}}D`{b{{Dd{Ab}}}}}{{l{hj}}}}{{}Bd}000000000000```{{}Gd}111111111111111111``1111111111111````````0`````{{}D`}0000000000000000000000000000000000000000000000022222222222222222222222222222222222222222222222222222222222```{GfGh}{{{b{dAd}}}{{l{hj}}}}{GjAl}{b{{b{c}}}{}}00000000{{{b{d}}}{{b{dc}}}{}}00000000{GfAf}4{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Gh}}}Gh}{{{b{Gf}}}Gf}{{{b{Gj}}}Gj}{{b{b{dc}}}h{}}0000000{{bAb}h}0000000{AdGj}?{{{b{dAd}}}h}{{{b{dAd}}}{{l{hj}}}}0{AdAl}{{}Gj}{c{{l{Gl}}}Hf}{c{{l{Gn}}}Hf}{c{{l{H`}}}Hf}{c{{l{Hb}}}Hf}{c{{l{Hd}}}Hf}{c{{l{Gh}}}Hf}{c{{l{Gf}}}Hf}{GjGl};{{{b{Gh}}}{{b{f}}}}{H`Af}{HdAh}{{{b{Gl}}{b{Gl}}}Al}{{{b{Gn}}{b{Gn}}}Al}{{{b{Gh}}{b{Gh}}}Al}{{{b{Gl}}{b{dB`}}}Bb}{{{b{Gn}}{b{dB`}}}Bb}{{{b{H`}}{b{dB`}}}Bb}{{{b{Hb}}{b{dB`}}}Bb}{{{b{Hd}}{b{dB`}}}Bb}{{{b{Gh}}{b{dB`}}}Bb}{{{b{Gf}}{b{dB`}}}Bb}{{{b{Gj}}{b{dB`}}}Bb}{GjAf}{cc{}}00000000{BdGh}{{{b{Ad}}}Gl}{{{b{dAd}}}{{l{Chj}}}}0{{{b{dAd}}}{{l{Bdj}}}}{AdFl}6{HbAf}{{}c{}}0000000081{AdAl}{{{b{Ad}}}Al}10{AdAh}0;{GjAb}{GjD`}{{{b{dAd}}}{{l{Gfj}}}}{{{b{dAd}}}{{l{Hdj}}}}{{{b{dAd}}}{{l{H`j}}}}{{{b{dAd}}}{{l{Hbj}}}}{GjBl}{FlAd}{HdAh}{HbAl}>{GjGn}{{{b{dAd}}}{{l{Bdj}}}}7{{{b{Ad}}}{{l{hj}}}}{GfAl}{{{b{dAd}}Bd}{{l{hj}}}}{{{b{Gl}}c}lHh}{{{b{Gn}}c}lHh}{{{b{H`}}c}lHh}{{{b{Hb}}c}lHh}{{{b{Hd}}c}lHh}{{{b{Gh}}c}lHh}{{{b{Gf}}c}lHh}{{{b{dAd}}Gj}h}{{{b{dAd}}Gl}{{l{hj}}}}{{{b{dAd}}}{{l{hj}}}}{GjAf}1{H`Af}{GjD`}{H`Hj}{GfHj}4{H`Hl}{HbHl}{HdHl}{GfHl}{bc{}}0000000{c{{l{e}}}{}{}}00000000{{}{{l{c}}}{}}00000000{bBn}00000000=====","D":"AEd","p":[[1,"reference",null,null,1],[0,"mut"],[1,"str"],[1,"unit"],[6,"RadarError",257],[6,"Result",731,null,1],[5,"Cli",41],[6,"DeviceMode",0],[1,"u8"],[5,"XM125Radar",366],[1,"f32"],[6,"Option",732,null,1],[6,"PresenceRange",41],[1,"bool"],[6,"Commands",41],[5,"Formatter",733],[8,"Result",733],[1,"u32"],[6,"FirmwareType",294],[1,"tuple",null,null,1],[6,"FirmwareAction",41],[1,"u64"],[5,"TypeId",734],[5,"Command",735],[6,"FirmwareType",41],[6,"OutputFormat",41],[6,"DetectorMode",41],[5,"String",736],[5,"ArgMatches",737],[8,"Error",738],[5,"Id",739],[1,"u16"],[5,"PossibleValue",740],[1,"slice"],[15,"Firmware",206],[15,"Monitor",206],[15,"Connect",206],[15,"Config",206],[15,"Bootloader",206],[15,"Update",217],[15,"Verify",217],[5,"DeviceState",221],[5,"DeviceManager",221],[5,"FirmwareManager",294],[5,"I2CError",741],[5,"Error",742],[6,"ConfigError",743],[5,"Error",744],[10,"Error",745],[15,"DeviceError",290],[15,"FirmwareError",290],[15,"InvalidResponse",290],[15,"Timeout",290],[5,"I2cDevice",342],[5,"I2cdev",741],[1,"usize"],[5,"Vec",746],[5,"Duration",747],[5,"BreathingMeasurement",366],[6,"BreathingAppState",366],[5,"XM125Config",366],[6,"DetectorMode",366],[6,"PresenceRange",366],[5,"DistanceMeasurement",366],[5,"PresenceMeasurement",366],[5,"CombinedMeasurement",366],[10,"Deserializer",748],[10,"Serializer",749],[1,"i16"],[5,"DateTime",750],[8,"Result",257]],"r":[],"b":[[277,"impl-Debug-for-RadarError"],[278,"impl-Display-for-RadarError"],[279,"impl-From%3CI2CError%3E-for-RadarError"],[280,"impl-From%3CError%3E-for-RadarError"],[282,"impl-From%3CConfigError%3E-for-RadarError"],[283,"impl-From%3CError%3E-for-RadarError"],[320,"impl-From%3CFirmwareType%3E-for-FirmwareType"],[322,"impl-From%3CDetectorMode%3E-for-FirmwareType"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADECOwAAAAcACgADABAABQAbAAAAHgAEACQABQAwAAAAMwAAADcAAAA8AAEARQAAAEkAAABOAAUAVwAiAHwABQCKAAUAkQACAKQAKADPAAAA4AAEAOcAAgDrAAIA8QABAPUAAwD6AAYAAgECAAYBCQARAQgAGwEBAB4BCgArAQAALgEDADQBBAA7AQEAPwEAAEEBAABDAQAARwEAAEwBBgBXAQMAXAEBAF8BAABiAQQAaAECAGwBsQAfAi0ATwIAAFECGQB0AgAAdgIFAIUCAgCJAgAAiwIEAJICAACUAgUAmwIAAJ0CCQCpAgAAqwIrAA==","P":[[5,"T"],[7,""],[11,"T"],[12,""],[21,"T"],[22,""],[27,"U"],[28,""],[37,"T"],[38,"U,T"],[39,"U"],[40,""],[86,"T"],[100,""],[106,"T"],[112,""],[130,"T"],[137,""],[151,"U"],[158,""],[163,"T"],[169,""],[173,"U,T"],[180,"U"],[187,""],[224,"T"],[228,""],[231,"T"],[232,""],[237,"T"],[239,""],[242,"U"],[244,""],[249,"T"],[250,"U,T"],[252,"U"],[254,""],[275,"T"],[277,""],[281,"T"],[282,""],[284,"U"],[285,""],[287,"U,T"],[288,"U"],[289,""],[301,"T"],[305,""],[308,"T"],[309,""],[319,"T"],[320,""],[321,"T"],[322,""],[327,"U"],[329,""],[331,"T"],[332,"U,T"],[334,"U"],[336,""],[344,"T"],[346,""],[349,"T"],[350,""],[351,"U"],[352,""],[359,"U,T"],[360,"U"],[361,""],[543,"T"],[561,""],[571,"T"],[579,""],[594,"__D"],[601,""],[618,"T"],[627,""],[635,"U"],[644,""],[670,"__S"],[677,""],[691,"T"],[699,"U,T"],[708,"U"],[717,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[20352]}