var searchIndex = new Map(JSON.parse('[["xm125_radar_monitor",{"t":"SSCHHCHCHHCHHHCHPPPFPPGPPPGPPPPGGPPPPPPPGPPPGPPPPNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNONNNNNNNNNNNNNNNNNOOOONNNNNNNOOHOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOPPPPPPPPPPPPPGIPNNNNNNNNNNNNNNNOOOPPFGPNNNNNNNNNNONNNNONNNNNNNNONNNNNNNNNNNNNNFONNNONNONNNNNNNNNNNNONNSSSSSSSSSSSSSSSSPFGPFPSPPFGSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSPFFNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNONOONNNNNNNNONNNNNNNNNNNOOONNNNNNNOOONONOOOOONNNONOOOONNNNNNNNNNNNONOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["APP_NAME","VERSION","cli","configure_detector","configure_radar_from_cli","error","execute_command","firmware","get_current_firmware_info","handle_firmware_command","i2c","main","monitor_measurements","output_response","radar","run","Breathing","Calibrate","Check","Cli","Combined","","Commands","Config","Connect","Csv","DetectorMode","Disconnect","Distance","","Firmware","FirmwareAction","FirmwareType","Human","Info","Json","Long","Measure","Medium","Monitor","OutputFormat","Presence","","","PresenceRange","Short","Status","Update","Verify","augment_args","augment_args_for_update","augment_subcommands","","augment_subcommands_for_update","","auto_reconnect","auto_update_firmware","auto_verify_firmware","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","command","","command_for_update","control_script","firmware_path","fmt","","","","","","format","from","","","","","","","from_arg_matches","","","from_arg_matches_mut","","","get_i2c_device_path","group_id","has_subcommand","","i2c_address","i2c_bus","i2c_device","int_pin","into","","","","","","","mode","no_auto_reconnect","parse_i2c_address","quiet","timeout","to_owned","","","","","","to_possible_value","","","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","update_from_arg_matches","","","update_from_arg_matches_mut","","","value_variants","","","","verbose","wakeup_pin","action","count","force","frame_rate","interval","length","presence_range","save_to","sensitivity","start","firmware_type","","force","verify","CalibrationRequired","Config","DeviceError","Err","I2c","InitializationFailed","InvalidParameters","InvalidResponse","Io","Json","MeasurementFailed","NotConnected","Ok","RadarError","Result","Timeout","borrow","borrow_mut","fmt","","from","","","","","into","source","to_string","try_from","try_into","type_id","message","response","timeout","Breathing","Distance","FirmwareManager","FirmwareType","Presence","application_id","binary_filename","borrow","","borrow_mut","","calculate_binary_checksum","clone","clone_into","clone_to_uninit","control_script","default","display_name","enter_bootloader_mode","eq","firmware_path","firmware_update_needed","flash_firmware","fmt","from","","","","get_firmware_checksum","i2c_address","into","","new","reset_to_run_mode","to_owned","try_from","","try_into","","type_id","","update_firmware","update_firmware_with_verification","verify_firmware","I2cDevice","address","borrow","borrow_mut","configure_gpio","device","export_gpio","from","int_pin","into","is_module_ready","new","read_gpio_value","read_register","set_gpio_direction","set_gpio_value","sleep_module","try_from","try_into","type_id","wake_up_module","wakeup_pin","write_read_register","write_register","CALIBRATION_TIMEOUT","CMD_APPLY_CONFIGURATION","CMD_APPLY_CONFIG_AND_CALIBRATE","CMD_CALIBRATE","CMD_DISABLE_CONTINUOUS_MODE","CMD_DISABLE_DETECTOR","CMD_ENABLE_CONTINUOUS_MODE","CMD_ENABLE_DETECTOR","CMD_ENABLE_PRESENCE_DETECTOR","CMD_MEASURE_DISTANCE","CMD_MEASURE_PRESENCE","CMD_PRESENCE_APPLY_CONFIGURATION","CMD_PRESENCE_START","CMD_PRESENCE_STOP","CMD_RECALIBRATE","CMD_RESET_MODULE","Combined","CombinedMeasurement","DetectorMode","Distance","DistanceMeasurement","Long","MEASUREMENT_TIMEOUT","Medium","Presence","PresenceMeasurement","PresenceRange","REG_APPLICATION_ID","REG_COMMAND","REG_DETECTOR_STATUS","REG_DISTANCE_RESULT","REG_END_CONFIG","REG_FRAME_RATE","REG_INTER_DETECTION_THRESHOLD","REG_INTER_PRESENCE_SCORE","REG_INTRA_DETECTION_THRESHOLD","REG_INTRA_PRESENCE_SCORE","REG_MEASURE_COUNTER","REG_PEAK0_DISTANCE","REG_PEAK0_STRENGTH","REG_PRESENCE_DISTANCE","REG_PRESENCE_END","REG_PRESENCE_RESULT","REG_PRESENCE_START","REG_PROTOCOL_STATUS","REG_SENSOR_INFO","REG_START_CONFIG","REG_VERSION","STATUS_CALIBRATION_DONE","STATUS_CONFIG_CREATE_OK","STATUS_CONTINUOUS_MODE","STATUS_DETECTOR_CREATE_OK","STATUS_DETECTOR_READY","STATUS_ERROR","STATUS_MEASUREMENT_READY","STATUS_PRESENCE_DETECTED","STATUS_RSS_REGISTER_OK","STATUS_SENSOR_CALIBRATE_OK","STATUS_SENSOR_CREATE_OK","Short","XM125Config","XM125Radar","auto_connect","auto_reconnect","borrow","","","","","","","borrow_mut","","","","","","","calibrate","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","config","configure_detector","configure_presence_range","connect","connect_async","continuous_mode","default","deserialize","","","","","detector_mode","disconnect","distance","","eq","","fmt","","","","","","frame_rate","from","","","","","","","get_detector_mode","get_info","get_status","get_status_raw","i2c","inter_detection_threshold","inter_presence_score","into","","","","","","","intra_detection_threshold","intra_presence_score","is_calibrated","is_connected","","is_continuous_monitoring","last_calibration","last_measurement","length_m","max_profile","max_step_length","measure_combined","measure_distance","measure_presence","measurement_interval_ms","new","presence","presence_detected","presence_distance","presence_range","read_application_id","read_distance_result","reset_xm125_to_run_mode","send_command","serialize","","","","","set_config","set_detector_mode","start_continuous_monitoring","start_m","stop_continuous_monitoring","strength","sweeps_per_frame","temperature","threshold_sensitivity","timestamp","","","to_owned","","","","","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","wait_for_calibration","wait_for_measurement"],"q":[[0,"xm125_radar_monitor"],[16,"xm125_radar_monitor::cli"],[178,"xm125_radar_monitor::cli::Commands"],[188,"xm125_radar_monitor::cli::FirmwareAction"],[192,"xm125_radar_monitor::error"],[223,"xm125_radar_monitor::error::RadarError"],[226,"xm125_radar_monitor::firmware"],[270,"xm125_radar_monitor::i2c"],[294,"xm125_radar_monitor::radar"],[507,"core::option"],[508,"core::result"],[509,"clap_builder::builder::command"],[510,"alloc::string"],[511,"core::fmt"],[512,"clap_builder::parser::matches::arg_matches"],[513,"clap_builder"],[514,"clap_builder::util::id"],[515,"clap_builder::builder::possible_value"],[516,"core::any"],[517,"config::error"],[518,"std::io::error"],[519,"serde_json::error"],[520,"linux_embedded_hal::i2c"],[521,"core::error"],[522,"alloc::vec"],[523,"core::time"],[524,"serde_core::de"],[525,"serde_core::ser"],[526,"chrono::datetime"]],"i":"````````````````BdAfAj`1Bh`22Bf`3413``030l404`452`0433A`0545400005462310546231546231546231546231000005462310054623105405400540000054623100`005462316231054623105462310546231054054623100D`DbDdDf200200DhDj11Ab00Gn111111110``1111111111111111EfEhEjEl0``000En101011100101000101110001001010101000`F`0000000000000000000000````````````````Fl``0`Fn`01``````````````````````````````````0``fFj132G`GbGd34652103465210365210365210344444436521034206565210334652103444443146521033144444433344434011344446521044434232321065210346521034652103465210344","f":"{{}b}0`{{{b{df}}{j{h}}{j{h}}{j{l}}{j{h}}{j{h}}}n}{{{b{df}}{b{A`}}}{{Ad{nAb}}}}`{{Af{b{df}}{b{A`}}}{{Ad{nAb}}}}`{{{b{df}}}{{Ad{AhAb}}}}{{Aj{b{A`}}}{{Ad{nAb}}}}`{{}n}{{{b{df}}{b{A`}}Al{j{Ah}}}{{Ad{nAb}}}}{{{b{A`}}{b{An}}{b{An}}{b{An}}{b{An}}}{{Ad{nAb}}}}`{A`{{Ad{nAb}}}}`````````````````````````````````{B`B`}00000{A`Bb}00{b{{b{c}}}{}}000000{{{b{d}}}{{b{dc}}}{}}000000{{{b{Af}}}Af}{{{b{Aj}}}Aj}{{{b{Bd}}}Bd}{{{b{Bf}}}Bf}{{{b{Bh}}}Bh}{{{b{l}}}l}{{b{b{dc}}}n{}}00000{{bBj}n}00000{{}B`}{A`j}1{A`Bl}0{{{b{Af}}{b{dBn}}}C`}{{{b{Aj}}{b{dBn}}}C`}{{{b{Bd}}{b{dBn}}}C`}{{{b{Bf}}{b{dBn}}}C`}{{{b{Bh}}{b{dBn}}}C`}{{{b{l}}{b{dBn}}}C`}{A`Bf}{cc{}}000000{{{b{Cb}}}{{Ad{A`Cd}}}}{{{b{Cb}}}{{Ad{AfCd}}}}{{{b{Cb}}}{{Ad{AjCd}}}}{{{b{dCb}}}{{Ad{A`Cd}}}}{{{b{dCb}}}{{Ad{AfCd}}}}{{{b{dCb}}}{{Ad{AjCd}}}}{{{b{A`}}}Bl}{{}{{j{Cf}}}}{{{b{An}}}Bb}0{A`Ch}{A`Bj}{A`j}0{{}c{}}000000{A`Bh}{A`Bb}{{{b{An}}}{{Ad{ChBl}}}}1{A`Al}{bc{}}00000{{{b{Bd}}}{{j{Cj}}}}{{{b{Bf}}}{{j{Cj}}}}{{{b{Bh}}}{{j{Cj}}}}{{{b{l}}}{{j{Cj}}}}{c{{Ad{e}}}{}{}}000000{{}{{Ad{c}}}{}}000000{bCl}000000{{{b{dA`}}{b{Cb}}}{{Ad{nCd}}}}{{{b{dAf}}{b{Cb}}}{{Ad{nCd}}}}{{{b{dAj}}{b{Cb}}}{{Ad{nCd}}}}{{{b{dA`}}{b{dCb}}}{{Ad{nCd}}}}{{{b{dAf}}{b{dCb}}}{{Ad{nCd}}}}{{{b{dAj}}{b{dCb}}}{{Ad{nCd}}}}{{}{{b{{Cn{Bd}}}}}}{{}{{b{{Cn{Bf}}}}}}{{}{{b{{Cn{Bh}}}}}}{{}{{b{{Cn{l}}}}}}{A`Bb}{A`j}{D`Aj}{Dbj}{DdBb}{Dfj}{DbAl}11311{DhBd}{Djj}{DhBb}0````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ab}}{b{dBn}}}C`}0{DlAb}{cc{}}{DnAb}{E`Ab}{EbAb}{{}c{}}{{{b{Ab}}}{{j{{b{Ed}}}}}}{bBl}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bCl}{EfBl}{EhBl}{EjAl}`````{ElAh}{El{{b{An}}}}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{En}}El}{{Ad{BlAb}}}}{{{b{El}}}El}{{b{b{dc}}}n{}}{{bBj}n}{EnBl}{{}En}8{{{b{En}}}{{Ad{nAb}}}}{{{b{El}}{b{El}}}Bb}3{{{b{En}}AhEl}{{Ad{BbAb}}}}{{{b{En}}{b{An}}}{{Ad{nAb}}}}{{{b{El}}{b{dBn}}}C`}{cc{}}{BdEl}{BhEl}2{{{b{En}}}{{Ad{BlAb}}}}{EnCh}{{}c{}}0{{{b{An}}{b{An}}Ch}En};{bc{}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bCl}0{{{b{En}}El}{{Ad{nAb}}}}{{{b{En}}ElBb}{{Ad{nAb}}}}1`{F`Ch}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{dF`}}{j{Ah}}{j{Ah}}}{{Ad{nAb}}}}{F`Fb}{{{b{F`}}Ah}{{Ad{nAb}}}}{cc{}}{F`j}?{{{b{F`}}}{{Ad{BbAb}}}}{{{b{An}}Ch}{{Ad{F`Ab}}}}{{{b{F`}}Ah}{{Ad{BjAb}}}}{{{b{dF`}}ChFd}{{Ad{{Ff{Bj}}Ab}}}}{{{b{F`}}Ah{b{An}}}{{Ad{nAb}}}}{{{b{F`}}AhBj}{{Ad{nAb}}}}{{{b{F`}}}{{Ad{nAb}}}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bCl}3:{{{b{dF`}}Ch{b{{Cn{Bj}}}}Fd}{{Ad{{Ff{Bj}}Ab}}}}{{{b{dF`}}Ch{b{{Cn{Bj}}}}}{{Ad{nAb}}}}{{}Fh}{{}Ah}00000000000000``````1````{{}Ch}0000000000000000000011111111111```{{{b{df}}}{{Ad{nAb}}}}{FjBb}{b{{b{c}}}{}}000000{{{b{d}}}{{b{dc}}}{}}0000003{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Fj}}}Fj}{{b{b{dc}}}n{}}00000{{bBj}n}00000{fFj}<{{{b{df}}}n}=={fBb}{{}Fj}{c{{Ad{Fl}}}Gf}{c{{Ad{Fn}}}Gf}{c{{Ad{G`}}}Gf}{c{{Ad{Gb}}}Gf}{c{{Ad{Gd}}}Gf}{FjFl}8{G`h}{Gdj}{{{b{Fl}}{b{Fl}}}Bb}{{{b{Fn}}{b{Fn}}}Bb}{{{b{Fl}}{b{dBn}}}C`}{{{b{Fn}}{b{dBn}}}C`}{{{b{G`}}{b{dBn}}}C`}{{{b{Gb}}{b{dBn}}}C`}{{{b{Gd}}{b{dBn}}}C`}{{{b{Fj}}{b{dBn}}}C`}{Fjh}{cc{}}000000{{{b{f}}}Fl}{{{b{df}}}{{Ad{BlAb}}}}0{{{b{df}}}{{Ad{AhAb}}}}{fF`}5{Gbh}{{}c{}}00000071{fBb}{{{b{f}}}Bb}10{fj}0:{FjBj}{FjCh}{{{b{df}}}{{Ad{GdAb}}}}{{{b{df}}}{{Ad{G`Ab}}}}{{{b{df}}}{{Ad{GbAb}}}}{FjAl}{F`f}{Gdj}{GbBb}={FjFn}{{{b{df}}}{{Ad{AhAb}}}}7{{{b{f}}}{{Ad{nAb}}}}{{{b{df}}Ah}{{Ad{nAb}}}}{{{b{Fl}}c}AdGh}{{{b{Fn}}c}AdGh}{{{b{G`}}c}AdGh}{{{b{Gb}}c}AdGh}{{{b{Gd}}c}AdGh}{{{b{df}}Fj}n}{{{b{df}}Fl}{{Ad{nAb}}}}{{{b{df}}}{{Ad{nAb}}}}{Fjh}1{G`h}{FjCh}{G`Gj}3{G`Gl}{GbGl}{GdGl}{bc{}}00000{c{{Ad{e}}}{}{}}000000{{}{{Ad{c}}}{}}000000{bCl}000000;;","D":"A@l","p":[[1,"reference",null,null,1],[0,"mut"],[5,"XM125Radar",294],[1,"f32"],[6,"Option",507,null,1],[6,"PresenceRange",16],[1,"unit"],[5,"Cli",16],[6,"RadarError",192],[6,"Result",508,null,1],[6,"Commands",16],[1,"u32"],[6,"FirmwareAction",16],[1,"u64"],[1,"str"],[5,"Command",509],[1,"bool"],[6,"FirmwareType",16],[6,"OutputFormat",16],[6,"DetectorMode",16],[1,"u8"],[5,"String",510],[5,"Formatter",511],[8,"Result",511],[5,"ArgMatches",512],[8,"Error",513],[5,"Id",514],[1,"u16"],[5,"PossibleValue",515],[5,"TypeId",516],[1,"slice"],[15,"Firmware",178],[15,"Monitor",178],[15,"Connect",178],[15,"Config",178],[15,"Update",188],[15,"Verify",188],[6,"ConfigError",517],[5,"Error",518],[5,"Error",519],[5,"I2CError",520],[10,"Error",521],[15,"DeviceError",223],[15,"InvalidResponse",223],[15,"Timeout",223],[6,"FirmwareType",226],[5,"FirmwareManager",226],[5,"I2cDevice",270],[5,"I2cdev",520],[1,"usize"],[5,"Vec",522],[5,"Duration",523],[5,"XM125Config",294],[6,"DetectorMode",294],[6,"PresenceRange",294],[5,"DistanceMeasurement",294],[5,"PresenceMeasurement",294],[5,"CombinedMeasurement",294],[10,"Deserializer",524],[10,"Serializer",525],[1,"i16"],[5,"DateTime",526],[8,"Result",192]],"r":[],"b":[[210,"impl-Display-for-RadarError"],[211,"impl-Debug-for-RadarError"],[212,"impl-From%3CConfigError%3E-for-RadarError"],[214,"impl-From%3CError%3E-for-RadarError"],[215,"impl-From%3CError%3E-for-RadarError"],[216,"impl-From%3CI2CError%3E-for-RadarError"],[251,"impl-From%3CFirmwareType%3E-for-FirmwareType"],[252,"impl-From%3CDetectorMode%3E-for-FirmwareType"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHUBMAAAAAMABgACAAsABQAUAAAAFwAAABsAAAAgAAEAKQAAAC0AAAAyAAUAOwAiAGAABQBuAAUAdQACAIgAKACzAAAAwQACAMUABwDOAAcA1wACANsACQDnAAAA6gADAO8ABAD2AAEA+gAAAPwAAQAAAQAABQEGAA8BAwAUAQEAFwEAABoBBAAgAQIAJAFAAGYBIgCLAQAAjQETAKkBBQC2AQIAugEAALwBBADCAQAAxAEFAMsBAADNAQYA1gEAANgBIQA=","P":[[58,"T"],[72,""],[78,"T"],[84,""],[102,"T"],[109,""],[123,"U"],[130,""],[135,"T"],[141,""],[145,"U,T"],[152,"U"],[159,""],[208,"T"],[210,""],[213,"T"],[214,""],[217,"U"],[218,""],[220,"U,T"],[221,"U"],[222,""],[233,"T"],[237,""],[239,"T"],[240,""],[250,"T"],[251,""],[253,"T"],[254,""],[256,"U"],[258,""],[260,"T"],[261,"U,T"],[263,"U"],[265,""],[272,"T"],[274,""],[277,"T"],[278,""],[279,"U"],[280,""],[287,"U,T"],[288,"U"],[289,""],[358,"T"],[372,""],[379,"T"],[385,""],[398,"__D"],[403,""],[416,"T"],[423,""],[430,"U"],[437,""],[461,"__S"],[466,""],[478,"T"],[484,"U,T"],[491,"U"],[498,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[13477]}