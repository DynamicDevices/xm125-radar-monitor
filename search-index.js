var searchIndex = new Map(JSON.parse('[["xm125_radar_monitor",{"t":"SPGPSNNHHCNNNHHHCNCHCNNHHCHHHHHCNHHHHHHHHCHNNNNPPPPPPPFPPGPPPGPPPPPGGPGPPPPPPPPGPPPGPPPPPPPPNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOONNNNNNNONNNNNNNNNNNNNNNNNNOOOONNNNOOOONNNNNNNNOOHOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFFONNNNNNNNNNOONNNNOONNOOONNNNNNNNNNPPPPPPPPPPPPPPPGIPNNNNNNNNNNNNNNNOOOOPPFGPNNNNNNNNNNNONNNNNONNNNNNNNNNONNNNNNNNNNNNNNNGGPPPPFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONFONNNONNONNNNNNNNNNNNONNSSSSSSSSSSSSSPGFSSSSSSSSSSSSSSSSSSSPFSSSSSSSSSSSSSGPPFPPPPSPPPFGSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSPFFONONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNNNNNNNONNOONNNNNNNNNNNONNNNNNNNNNNNNNNOOONNNNNNNNNOOONONOOOOONNNNONOOOONNNONNNNNNNNNNNONOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["APP_NAME","BootloaderMode","DeviceMode","RunMode","VERSION","borrow","borrow_mut","check_control_script","check_device_presence","cli","clone","clone_into","clone_to_uninit","configure_detector","configure_presence_parameters","configure_radar_from_cli","device_manager","eq","error","execute_command","firmware","fmt","from","get_current_firmware_info","get_current_firmware_info_for_check","gpio","handle_bootloader_command","handle_firmware_checksum_command","handle_firmware_command","handle_firmware_erase_command","handle_gpio_command","i2c","into","is_likely_unprogrammed_module","main","monitor_measurements","monitor_presence_continuous","output_response","print_banner","print_banner_with_detected_mode","print_unprogrammed_module_help","radar","run","to_owned","try_from","try_into","type_id","Bootloader","Breathing","","","Calibrate","Check","Checksum","Cli","Combined","","Commands","Config","Connect","Csv","DetectorMode","Disconnect","Distance","","Erase","Firmware","FirmwareAction","FirmwareType","Gpio","GpioAction","Human","Info","Init","Json","Long","Measure","Medium","Monitor","OutputFormat","Presence","","","PresenceRange","ResetBootloader","ResetRun","Short","Status","","Test","Update","Verify","augment_args","augment_args_for_update","augment_subcommands","","","augment_subcommands_for_update","","","auto_reconnect","auto_update_firmware","auto_verify_firmware","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","","clone_into","","","","","","","clone_to_uninit","","","","","","","command","","command_for_update","control_script","debug_registers","firmware_path","fmt","","","","","","","format","from","","","","","","","","from_arg_matches","","","","from_arg_matches_mut","","","","get_gpio_pins","get_i2c_device_path","gpio_boot","gpio_mcu_int","gpio_reset","gpio_wake","group_id","has_subcommand","","","i2c_address","i2c_bus","i2c_device","int_pin","into","","","","","","","","mode","no_auto_reconnect","parse_i2c_address","quiet","timeout","to_owned","","","","","","","to_possible_value","","","","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","update_from_arg_matches","","","","update_from_arg_matches_mut","","","","value_variants","","","","verbose","wakeup_pin","action","","continuous","count","","force","frame_rate","","interval","","length","max_range","min_range","presence_range","","reset","save_to","","sensitivity","","start","confirm","firmware_type","","","force","verbose","verify","DeviceManager","DeviceState","app_id","borrow","","borrow_mut","","check_device_presence","check_i2c_bus_presence","clone","clone_into","clone_to_uninit","extract_i2c_bus_number","firmware_manager","firmware_type","fmt","from","","get_device_info","i2c_address","i2c_device_path","into","","is_present","is_responsive","needs_reset","new","reset_to_run_mode","to_owned","try_from","","try_into","","type_id","","update_firmware","CalibrationRequired","Config","DeviceError","Err","FirmwareError","I2c","InitializationFailed","InvalidParameters","InvalidResponse","Io","Json","MeasurementFailed","ModuleNotProgrammed","NotConnected","Ok","RadarError","Result","Timeout","borrow","borrow_mut","fmt","","from","","","","","into","source","to_string","try_from","try_into","type_id","message","","response","timeout","Breathing","Distance","FirmwareManager","FirmwareType","Presence","application_id","binary_filename","borrow","","borrow_mut","","calculate_binary_checksum","check_control_script","clone","clone_into","clone_to_uninit","control_script","default","display_name","enter_bootloader_mode","eq","erase_chip","firmware_path","firmware_update_needed","flash_firmware","fmt","from","","","","from_app_id","get_firmware_checksum","get_firmware_path","i2c_address","into","","new","reset_to_run_mode","to_owned","try_from","","try_into","","type_id","","update_firmware","update_firmware_with_verification","verify_device_in_run_mode","verify_firmware","GpioDirection","GpioValue","High","Input","Low","Output","XM125GpioController","XM125GpioPins","boot","borrow","","","","borrow_mut","","","","clone","","","clone_into","","","clone_to_uninit","","","default","","drop","eq","","export_gpio","fix_gpio141_bootloader_pin","fmt","","","","","from","","","","get_gpio_value","initialize","initialized","into","","","","is_initialized","mcu_interrupt","new","perform_reset_sequence","pins","","reset","reset_to_bootloader_mode","reset_to_run_mode","set_bootloader_mode","set_gpio_direction","set_gpio_value","set_run_mode","show_gpio_status","test_bootloader_control","to_owned","","","to_string","","try_export_gpio","try_from","","","","try_into","","","","type_id","","","","unbind_spi_controller","unbind_spi_device","wait_for_module_ready","wake_up","with_pins","I2cDevice","address","borrow","borrow_mut","configure_gpio","device","export_gpio","from","int_pin","into","is_module_ready","new","read_gpio_value","read_register","set_gpio_direction","set_gpio_value","sleep_module","try_from","try_into","type_id","wake_up_module","wakeup_pin","write_read_register","write_register","BREATHING_DISTANCE_DETERMINATION_DURATION_S_DEFAULT","BREATHING_END_DEFAULT","BREATHING_FRAME_RATE_DEFAULT","BREATHING_HIGHEST_BREATHING_RATE_DEFAULT","BREATHING_HWAAS_DEFAULT","BREATHING_INTRA_DETECTION_THRESHOLD_DEFAULT","BREATHING_LOWEST_BREATHING_RATE_DEFAULT","BREATHING_NUM_DISTANCES_TO_ANALYZE_DEFAULT","BREATHING_PROFILE_DEFAULT","BREATHING_START_DEFAULT","BREATHING_SWEEPS_PER_FRAME_DEFAULT","BREATHING_TIME_SERIES_LENGTH_S_DEFAULT","BREATHING_USE_PRESENCE_PROCESSOR_DEFAULT","Breathing","BreathingAppState","BreathingMeasurement","CALIBRATION_TIMEOUT","CMD_APPLY_CONFIGURATION","CMD_APPLY_CONFIG_AND_CALIBRATE","CMD_BREATHING_APPLY_CONFIGURATION","CMD_BREATHING_START_APP","CMD_BREATHING_STOP_APP","CMD_CALIBRATE","CMD_DISABLE_CONTINUOUS_MODE","CMD_DISABLE_DETECTOR","CMD_ENABLE_CONTINUOUS_MODE","CMD_ENABLE_DETECTOR","CMD_ENABLE_PRESENCE_DETECTOR","CMD_MEASURE_DISTANCE","CMD_MEASURE_PRESENCE","CMD_PRESENCE_APPLY_CONFIGURATION","CMD_PRESENCE_START","CMD_PRESENCE_STOP","CMD_RECALIBRATE","CMD_RESET_MODULE","Combined","CombinedMeasurement","DISTANCE_CLOSE_RANGE_LEAKAGE_CANCELLATION_DEFAULT","DISTANCE_END_DEFAULT","DISTANCE_FIXED_AMPLITUDE_THRESHOLD_VALUE_DEFAULT","DISTANCE_FIXED_STRENGTH_THRESHOLD_VALUE_DEFAULT","DISTANCE_MAX_PROFILE_DEFAULT","DISTANCE_MAX_STEP_LENGTH_DEFAULT","DISTANCE_NUM_FRAMES_RECORDED_THRESHOLD_DEFAULT","DISTANCE_PEAK_SORTING_DEFAULT","DISTANCE_REFLECTOR_SHAPE_DEFAULT","DISTANCE_SIGNAL_QUALITY_DEFAULT","DISTANCE_START_DEFAULT","DISTANCE_THRESHOLD_METHOD_DEFAULT","DISTANCE_THRESHOLD_SENSITIVITY_DEFAULT","DetectorMode","DetermineDistance","Distance","DistanceMeasurement","EstimateBreathingRate","Init","IntraPresence","Long","MEASUREMENT_TIMEOUT","Medium","NoPresence","Presence","PresenceMeasurement","PresenceRange","REG_APPLICATION_ID","REG_BREATHING_APP_STATE","REG_BREATHING_DISTANCE_DETERMINATION_DURATION_S","REG_BREATHING_END","REG_BREATHING_FRAME_RATE","REG_BREATHING_HIGHEST_BREATHING_RATE","REG_BREATHING_HWAAS","REG_BREATHING_INTRA_DETECTION_THRESHOLD","REG_BREATHING_LOWEST_BREATHING_RATE","REG_BREATHING_NUM_DISTANCES_TO_ANALYZE","REG_BREATHING_PROFILE","REG_BREATHING_RATE","REG_BREATHING_RESULT","REG_BREATHING_START","REG_BREATHING_SWEEPS_PER_FRAME","REG_BREATHING_TIME_SERIES_LENGTH_S","REG_BREATHING_USE_PRESENCE_PROCESSOR","REG_CLOSE_RANGE_LEAKAGE_CANCELLATION","REG_COMMAND","REG_DETECTOR_STATUS","REG_DISTANCE_RESULT","REG_END_CONFIG","REG_FIXED_AMPLITUDE_THRESHOLD_VALUE","REG_FIXED_STRENGTH_THRESHOLD_VALUE","REG_FRAME_RATE","REG_INTER_DETECTION_THRESHOLD","REG_INTER_PRESENCE_SCORE","REG_INTRA_DETECTION_THRESHOLD","REG_INTRA_PRESENCE_SCORE","REG_MAX_PROFILE","REG_MAX_STEP_LENGTH","REG_MEASURE_COUNTER","REG_NUM_FRAMES_RECORDED_THRESHOLD","REG_PEAK0_DISTANCE","REG_PEAK0_STRENGTH","REG_PEAK_SORTING","REG_PRESENCE_DISTANCE","REG_PRESENCE_END","REG_PRESENCE_RESULT","REG_PRESENCE_START","REG_PROTOCOL_STATUS","REG_REFLECTOR_SHAPE","REG_SENSOR_INFO","REG_SIGNAL_QUALITY","REG_START_CONFIG","REG_THRESHOLD_METHOD","REG_THRESHOLD_SENSITIVITY","REG_VERSION","STATUS_ALL_ERROR_MASK","STATUS_ALL_OK_MASK","STATUS_BUSY","STATUS_CALIBRATION_DONE","STATUS_CONFIG_APPLY_ERROR","STATUS_CONFIG_APPLY_OK","STATUS_CONFIG_CREATE_ERROR","STATUS_CONFIG_CREATE_OK","STATUS_DETECTOR_CALIBRATE_ERROR","STATUS_DETECTOR_CREATE_ERROR","STATUS_DETECTOR_CREATE_OK","STATUS_DETECTOR_READY","STATUS_DISTANCE_BUSY","STATUS_DISTANCE_CALIBRATION_BUFFER_ERROR","STATUS_DISTANCE_CALIBRATION_BUFFER_OK","STATUS_DISTANCE_CONFIG_APPLY_ERROR","STATUS_DISTANCE_CONFIG_APPLY_OK","STATUS_DISTANCE_CONFIG_CREATE_ERROR","STATUS_DISTANCE_CONFIG_CREATE_OK","STATUS_DISTANCE_DETECTOR_BUFFER_ERROR","STATUS_DISTANCE_DETECTOR_BUFFER_OK","STATUS_DISTANCE_DETECTOR_CALIBRATE_ERROR","STATUS_DISTANCE_DETECTOR_CALIBRATE_OK","STATUS_DISTANCE_DETECTOR_CREATE_ERROR","STATUS_DISTANCE_DETECTOR_CREATE_OK","STATUS_DISTANCE_DETECTOR_ERROR","STATUS_DISTANCE_RSS_REGISTER_ERROR","STATUS_DISTANCE_RSS_REGISTER_OK","STATUS_DISTANCE_SENSOR_BUFFER_ERROR","STATUS_DISTANCE_SENSOR_BUFFER_OK","STATUS_DISTANCE_SENSOR_CALIBRATE_ERROR","STATUS_DISTANCE_SENSOR_CALIBRATE_OK","STATUS_DISTANCE_SENSOR_CREATE_ERROR","STATUS_DISTANCE_SENSOR_CREATE_OK","STATUS_ERROR","STATUS_MEASUREMENT_READY","STATUS_PRESENCE_BUSY","STATUS_PRESENCE_CONFIG_APPLY_ERROR","STATUS_PRESENCE_CONFIG_APPLY_OK","STATUS_PRESENCE_CONFIG_CREATE_ERROR","STATUS_PRESENCE_CONFIG_CREATE_OK","STATUS_PRESENCE_DETECTOR_BUFFER_ERROR","STATUS_PRESENCE_DETECTOR_BUFFER_OK","STATUS_PRESENCE_DETECTOR_CREATE_ERROR","STATUS_PRESENCE_DETECTOR_CREATE_OK","STATUS_PRESENCE_DETECTOR_ERROR","STATUS_PRESENCE_RSS_REGISTER_ERROR","STATUS_PRESENCE_RSS_REGISTER_OK","STATUS_PRESENCE_SENSOR_BUFFER_ERROR","STATUS_PRESENCE_SENSOR_BUFFER_OK","STATUS_PRESENCE_SENSOR_CALIBRATE_ERROR","STATUS_PRESENCE_SENSOR_CALIBRATE_OK","STATUS_PRESENCE_SENSOR_CREATE_ERROR","STATUS_PRESENCE_SENSOR_CREATE_OK","STATUS_RSS_REGISTER_OK","STATUS_SENSOR_CALIBRATE_ERROR","STATUS_SENSOR_CALIBRATE_OK","STATUS_SENSOR_CREATE_ERROR","STATUS_SENSOR_CREATE_OK","Short","XM125Config","XM125Radar","app_state","auto_connect","auto_reconnect","borrow","","","","","","","","","borrow_mut","","","","","","","","","breathing_rate","calibrate","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","config","configure_detector","configure_presence_range","connect","connect_async","continuous_mode","debug_breathing_registers","debug_common_registers","debug_distance_registers","debug_presence_registers","debug_register","debug_registers","default","deserialize","","","","","","","detector_mode","disconnect","display_name","distance","","eq","","","fmt","","","","","","","","frame_rate","from","","","","","","","","","","from_u32","get_detector_mode","get_info","get_status","get_status_raw","i2c","inter_detection_threshold","inter_presence_score","into","","","","","","","","","intra_detection_threshold","intra_presence_score","is_calibrated","is_connected","","is_continuous_monitoring","last_calibration","last_measurement","length_m","max_profile","max_step_length","measure_breathing","measure_combined","measure_distance","measure_presence","measurement_interval_ms","new","presence","presence_detected","presence_distance","presence_range","read_application_id","read_distance_result","reset_xm125_to_run_mode","result_ready","send_command","serialize","","","","","","","set_config","set_detector_mode","start_continuous_monitoring","start_m","stop_continuous_monitoring","strength","sweeps_per_frame","temperature","","threshold_sensitivity","timestamp","","","","to_owned","","","","","","","","try_from","","","","","","","","","try_into","","","","","","","","","type_id","","","","","","","","","validate_firmware_compatibility","wait_for_calibration","wait_for_measurement","write_breathing_configuration","write_distance_configuration"],"q":[[0,"xm125_radar_monitor"],[47,"xm125_radar_monitor::cli"],[246,"xm125_radar_monitor::cli::Commands"],[267,"xm125_radar_monitor::cli::FirmwareAction"],[274,"xm125_radar_monitor::device_manager"],[310,"xm125_radar_monitor::error"],[343,"xm125_radar_monitor::error::RadarError"],[347,"xm125_radar_monitor::firmware"],[396,"xm125_radar_monitor::gpio"],[483,"xm125_radar_monitor::i2c"],[507,"xm125_radar_monitor::radar"],[879,"core::result"],[880,"core::option"],[881,"core::fmt"],[882,"core::any"],[883,"clap_builder::builder::command"],[884,"alloc::string"],[885,"clap_builder::parser::matches::arg_matches"],[886,"clap_builder"],[887,"clap_builder::util::id"],[888,"clap_builder::builder::possible_value"],[889,"linux_embedded_hal::i2c"],[890,"config::error"],[891,"serde_json::error"],[892,"std::io::error"],[893,"core::error"],[894,"alloc::vec"],[895,"core::time"],[896,"serde_core::de"],[897,"serde_core::ser"],[898,"chrono::datetime"]],"i":"`A``0`00```000````0```00`````````0``````````0000An0BjCh2Bl0`31`33Cf`43214``4`04Bn1Aj606`654`11061133n07427420000742635107426351742635174263517426351000000742635100742635107420742000000074200000742635100`007426351635107426351074263510742635107420742635100DjDlDn0E`Eb2Ed3203330Ef43411EhEjElEn202``F`Fb10100111001101000011110010101010j00J`11111111110``1111111111111111G`GbGdGfBf0``000Fd10100111001010000101111000010010101010000``GjGh10``D`Gl12301231231231230102300122330123000012301000010000000012323001230123012300010`Gn0000000000000000000000`````````````Hn`````````````````````0```````````````Hj1`000I``012`````````````````````````````````````````````````````````````````````````````````````````````````````````````0``HhAdHl153IbIdIf753486210753548621075386210753862107534444444444443862107534720867862107533486621075374444431486210753314444443334444340113444548621075444342325321058621075348621075348621075348621075344444","f":"{{}b}```0{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}{{l{hj}}}}{{{b{n}}}{{l{A`j}}}}`{{{b{A`}}}A`}{{b{b{dc}}}h{}}{{bAb}h}{{{b{dAd}}{Ah{Af}}{Ah{Af}}{Ah{Aj}}{Ah{Af}}{Ah{Af}}}h}{{{b{dAd}}{Ah{{b{Aj}}}}{Ah{Af}}{Ah{Af}}{Ah{Af}}{Ah{Af}}}{{l{hj}}}}{{{b{dAd}}{b{n}}}{{l{hj}}}}`{{{b{A`}}{b{A`}}}Al}`{{An{b{dAd}}{b{n}}}{{l{hj}}}}`{{{b{A`}}{b{dB`}}}Bb}{cc{}}{{{b{dAd}}}{{l{Bdj}}}}{{{b{n}}}{{l{{Bh{BdBf}}j}}}}`{{Al{b{n}}}{{l{hj}}}}{{{Ah{Bj}}Al{b{n}}}{{l{hj}}}}{{Bl{b{n}}}{{l{hj}}}}2{{{b{Bn}}{b{n}}}{{l{hj}}}}`{{}c{}}{{{b{n}}}Al}{{}h}{{{b{dAd}}{b{n}}C`{Ah{Bd}}}{{l{hj}}}}{{{b{dAd}}{b{n}}{Ah{Bd}}C`{Ah{{b{f}}}}}{{l{hj}}}}{{{b{n}}{b{f}}{b{f}}{b{f}}{b{f}}}{{l{hj}}}}{{{b{n}}}h}{{{b{n}}{Ah{{b{f}}}}}h}1`{n{{l{hj}}}}{bc{}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{bCb}`````````````````````````````````````````````{CdCd}0000000{nAl}00{b{{b{c}}}{}}0000000{{{b{d}}}{{b{dc}}}{}}0000000{{{b{An}}}An}{{{b{Bl}}}Bl}{{{b{Bn}}}Bn}{{{b{Bj}}}Bj}{{{b{Cf}}}Cf}{{{b{Ch}}}Ch}{{{b{Aj}}}Aj}{{b{b{dc}}}h{}}000000{{bAb}h}000000{{}Cd}{nAh}1{nCj}>0{{{b{An}}{b{dB`}}}Bb}{{{b{Bl}}{b{dB`}}}Bb}{{{b{Bn}}{b{dB`}}}Bb}{{{b{Bj}}{b{dB`}}}Bb}{{{b{Cf}}{b{dB`}}}Bb}{{{b{Ch}}{b{dB`}}}Bb}{{{b{Aj}}{b{dB`}}}Bb}{nCf}{cc{}}0000000{{{b{Cl}}}{{l{nCn}}}}{{{b{Cl}}}{{l{AnCn}}}}{{{b{Cl}}}{{l{BlCn}}}}{{{b{Cl}}}{{l{BnCn}}}}{{{b{dCl}}}{{l{nCn}}}}{{{b{dCl}}}{{l{AnCn}}}}{{{b{dCl}}}{{l{BlCn}}}}{{{b{dCl}}}{{l{BnCn}}}}{{{b{n}}}D`}{{{b{n}}}Cj}{nBd}000{{}{{Ah{Db}}}}{{{b{f}}}Al}00{nDd}{nAb}{nAh}0{{}c{}}0000000{nCh}{nAl}{{{b{f}}}{{l{DdCj}}}}1{nC`}{bc{}}000000{{{b{Bj}}}{{Ah{Df}}}}{{{b{Cf}}}{{Ah{Df}}}}{{{b{Ch}}}{{Ah{Df}}}}{{{b{Aj}}}{{Ah{Df}}}}{c{{l{e}}}{}{}}0000000{{}{{l{c}}}{}}0000000{bCb}0000000{{{b{dn}}{b{Cl}}}{{l{hCn}}}}{{{b{dAn}}{b{Cl}}}{{l{hCn}}}}{{{b{dBl}}{b{Cl}}}{{l{hCn}}}}{{{b{dBn}}{b{Cl}}}{{l{hCn}}}}{{{b{dn}}{b{dCl}}}{{l{hCn}}}}{{{b{dAn}}{b{dCl}}}{{l{hCn}}}}{{{b{dBl}}{b{dCl}}}{{l{hCn}}}}{{{b{dBn}}{b{dCl}}}{{l{hCn}}}}{{}{{b{{Dh{Bj}}}}}}{{}{{b{{Dh{Cf}}}}}}{{}{{b{{Dh{Ch}}}}}}{{}{{b{{Dh{Aj}}}}}}{nAl}{nAh}{DjBl}{DlBn}{DnAl}{DnAh}{E`Ah}{EbAl}2{EdAh}{DnC`}{E`C`}25552{EfAl}65633{EhAl}{EjBj}{ElAh}{EnAh}{EjAl}{EnAl}1``{F`Ah}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Fb}}}F`}{{{b{Fb}}Ab}Al}{{{b{F`}}}F`}{{b{b{dc}}}h{}}{{bAb}h}{{{b{Fb}}}Ab}{FbFd}9{{{b{F`}}{b{dB`}}}Bb}{cc{}}0{{{b{Fb}}}{{l{Cjj}}}}{FbDd}{FbCj}{{}c{}}0{F`Al}00{{CjDdCjCj}Fb}{{{b{Fb}}}{{l{hj}}}}{bc{}}{c{{l{e}}}{}{}}0{{}{{l{c}}}{}}0{bCb}0{{{b{Fb}}BfAl}{{l{hj}}}}``````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{j}}{b{dB`}}}Bb}0{Ffj}{cc{}}{Fhj}{Fjj}{Flj}{{}c{}}{{{b{j}}}{{Ah{{b{Fn}}}}}}{bCj}>=<{G`Cj}{GbCj}{GdCj}{GfC`}`````{BfBd}{Bf{{b{f}}}}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Fd}}Bf}{{l{Cjj}}}}{{{b{Fd}}}{{l{hj}}}}{{{b{Bf}}}Bf}{{b{b{dc}}}h{}}{{bAb}h}{FdCj}{{}Fd}95{{{b{Bf}}{b{Bf}}}Al}62{{{b{Fd}}BdBf}{{l{Alj}}}}{{{b{Fd}}{b{f}}}{{l{hj}}}}{{{b{Bf}}{b{dB`}}}Bb}{cc{}}0{BjBf}{ChBf}{BdBf}>{{{b{Fd}}Bf}Cj}{FdDd}{{}c{}}0{{{b{f}}{b{f}}Dd}Fd}{{{b{Fd}}}{{l{hj}}}}{bc{}}{c{{l{e}}}{}{}}0{{}{{l{c}}}{}}0{bCb}0{{{b{Fd}}Bf}{{l{hj}}}}{{{b{Fd}}BfAl}{{l{hj}}}}{{{b{Fd}}}Al}2````````{D`Bd}{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{{{b{D`}}}D`}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{b{b{dc}}}h{}}00{{bAb}h}00{{}Gl}{{}D`}{{{b{dGl}}}h}{{{b{Gh}}{b{Gh}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gl}}Bd{b{f}}}{{l{hj}}}}{{{b{Gl}}}{{l{hj}}}}{{{b{D`}}{b{dB`}}}Bb}{{{b{Gh}}{b{dB`}}}Bb}0{{{b{Gj}}{b{dB`}}}Bb}0{cc{}}000{{{b{Gl}}Bd}{{l{Gjj}}}}{{{b{dGl}}}{{l{hj}}}}{GlAl}{{}c{}}000{{{b{Gl}}}Al}{D`Bd}{{}Gl};{{{b{Gl}}}{{b{D`}}}}{GlD`}3==={{{b{Gl}}BdGh{b{f}}}{{l{hj}}}}{{{b{Gl}}BdGj{b{f}}}{{l{hj}}}}???{bc{}}00{bCj}0{{{b{Gl}}Bd}{{l{hFl}}}}{c{{l{e}}}{}{}}000{{}{{l{c}}}{}}000{bCb}000{{{b{Gl}}{b{f}}}{{l{hj}}}}0{{{b{Gl}}Bd}{{l{hj}}}}={D`Gl}`{GnDd}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{dGn}}{Ah{Bd}}{Ah{Bd}}}{{l{hj}}}}{GnH`}{{{b{Gn}}Bd}{{l{hj}}}}{cc{}}{GnAh}{{}c{}}{{{b{Gn}}}{{l{Alj}}}}{{{b{f}}Dd}{{l{Gnj}}}}{{{b{Gn}}Bd}{{l{Abj}}}}{{{b{dGn}}DdHb}{{l{{Hd{Ab}}j}}}}{{{b{Gn}}Bd{b{f}}}{{l{hj}}}}{{{b{Gn}}BdAb}{{l{hj}}}}{{{b{Gn}}}{{l{hj}}}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{bCb}3;{{{b{dGn}}Dd{b{{Dh{Ab}}}}Hb}{{l{{Hd{Ab}}j}}}}{{{b{dGn}}Dd{b{{Dh{Ab}}}}}{{l{hj}}}}{{}Bd}000000000000```{{}Hf}111111111111111111``1111111111111````````0`````{{}Dd}0000000000000000000000000000000000000000000000022222222222222222222222222222222222222222222222222222222222```{HhHj}{{{b{dAd}}}{{l{hj}}}}{HlAl}{b{{b{c}}}{}}00000000{{{b{d}}}{{b{dc}}}{}}00000000{HhAf}4{{{b{Hn}}}Hn}{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Hj}}}Hj}{{{b{Hh}}}Hh}{{{b{Hl}}}Hl}{{b{b{dc}}}h{}}0000000{{bAb}h}0000000{AdHl}?{{{b{dAd}}}h}{{{b{dAd}}}{{l{hj}}}}0{AdAl}1111{{{b{dAd}}Dd{b{f}}{b{f}}}{{l{hj}}}}{{{b{dAd}}{b{f}}}{{l{hj}}}}{{}Hl}{c{{l{Hn}}}Ih}{c{{l{I`}}}Ih}{c{{l{Ib}}}Ih}{c{{l{Id}}}Ih}{c{{l{If}}}Ih}{c{{l{Hj}}}Ih}{c{{l{Hh}}}Ih}{HlHn}={{{b{Hj}}}{{b{f}}}}{IbAf}{IfAh}{{{b{Hn}}{b{Hn}}}Al}{{{b{I`}}{b{I`}}}Al}{{{b{Hj}}{b{Hj}}}Al}{{{b{Hn}}{b{dB`}}}Bb}{{{b{I`}}{b{dB`}}}Bb}{{{b{Ib}}{b{dB`}}}Bb}{{{b{Id}}{b{dB`}}}Bb}{{{b{If}}{b{dB`}}}Bb}{{{b{Hj}}{b{dB`}}}Bb}{{{b{Hh}}{b{dB`}}}Bb}{{{b{Hl}}{b{dB`}}}Bb}{HlAf}{cc{}}00{AjI`}111111{BdHj}{{{b{Ad}}}Hn}{{{b{dAd}}}{{l{Cjj}}}}0{{{b{dAd}}}{{l{Bdj}}}}{AdGn}7{IdAf}{{}c{}}0000000091{AdAl}{{{b{Ad}}}Al}10{AdAh}0<{HlAb}{HlDd}{{{b{dAd}}}{{l{Hhj}}}}{{{b{dAd}}}{{l{Ifj}}}}{{{b{dAd}}}{{l{Ibj}}}}{{{b{dAd}}}{{l{Idj}}}}{HlC`}{GnAd}{IfAh}{IdAl}>{HlI`}{{{b{dAd}}}{{l{Bdj}}}}7{{{b{Ad}}}{{l{hj}}}}{HhAl}{{{b{dAd}}Bd}{{l{hj}}}}{{{b{Hn}}c}lIj}{{{b{I`}}c}lIj}{{{b{Ib}}c}lIj}{{{b{Id}}c}lIj}{{{b{If}}c}lIj}{{{b{Hj}}c}lIj}{{{b{Hh}}c}lIj}{{{b{dAd}}Hl}h}{{{b{dAd}}Hn}{{l{hj}}}}{{{b{dAd}}}{{l{hj}}}}{HlAf}1{IbAf}{HlDd}{IbIl}{HhIl}4{IbIn}{IdIn}{IfIn}{HhIn}{bc{}}0000000{c{{l{e}}}{}{}}00000000{{}{{l{c}}}{}}00000000{bCb}00000000=====","D":"ANn","p":[[1,"reference",null,null,1],[0,"mut"],[1,"str"],[1,"unit"],[6,"RadarError",310],[6,"Result",879,null,1],[5,"Cli",47],[6,"DeviceMode",0],[1,"u8"],[5,"XM125Radar",507],[1,"f32"],[6,"Option",880,null,1],[6,"PresenceRange",47],[1,"bool"],[6,"Commands",47],[5,"Formatter",881],[8,"Result",881],[1,"u32"],[6,"FirmwareType",347],[1,"tuple",null,null,1],[6,"FirmwareType",47],[6,"FirmwareAction",47],[6,"GpioAction",47],[1,"u64"],[5,"TypeId",882],[5,"Command",883],[6,"OutputFormat",47],[6,"DetectorMode",47],[5,"String",884],[5,"ArgMatches",885],[8,"Error",886],[5,"XM125GpioPins",396],[5,"Id",887],[1,"u16"],[5,"PossibleValue",888],[1,"slice"],[15,"Firmware",246],[15,"Gpio",246],[15,"Presence",246],[15,"Monitor",246],[15,"Connect",246],[15,"Config",246],[15,"Bootloader",246],[15,"Erase",267],[15,"Update",267],[15,"Verify",267],[15,"Checksum",267],[5,"DeviceState",274],[5,"DeviceManager",274],[5,"FirmwareManager",347],[5,"I2CError",889],[6,"ConfigError",890],[5,"Error",891],[5,"Error",892],[10,"Error",893],[15,"DeviceError",343],[15,"FirmwareError",343],[15,"InvalidResponse",343],[15,"Timeout",343],[6,"GpioDirection",396],[6,"GpioValue",396],[5,"XM125GpioController",396],[5,"I2cDevice",483],[5,"I2cdev",889],[1,"usize"],[5,"Vec",894],[5,"Duration",895],[5,"BreathingMeasurement",507],[6,"BreathingAppState",507],[5,"XM125Config",507],[6,"DetectorMode",507],[6,"PresenceRange",507],[5,"DistanceMeasurement",507],[5,"PresenceMeasurement",507],[5,"CombinedMeasurement",507],[10,"Deserializer",896],[10,"Serializer",897],[1,"i16"],[5,"DateTime",898],[8,"Result",310]],"r":[],"b":[[330,"impl-Debug-for-RadarError"],[331,"impl-Display-for-RadarError"],[332,"impl-From%3CI2CError%3E-for-RadarError"],[334,"impl-From%3CConfigError%3E-for-RadarError"],[335,"impl-From%3CError%3E-for-RadarError"],[336,"impl-From%3CError%3E-for-RadarError"],[375,"impl-From%3CFirmwareType%3E-for-FirmwareType"],[376,"impl-From%3CDetectorMode%3E-for-FirmwareType"],[430,"impl-Display-for-GpioDirection"],[431,"impl-Debug-for-GpioDirection"],[432,"impl-Display-for-GpioValue"],[433,"impl-Debug-for-GpioValue"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHgCRwAAAAcACgADABEABQAaAAAAIAAAACMAAQAmAAIAKgAFADcAAAA6AAAAPgAAAEQAAQBHAAAAUAAAAFQAAABdAAcAaAAnAJMABgCjAAcAsQADAMYALgD3AAEAFQEEABwBAgAgAQIAJgEBACoBAwAvAQYANwECADsBCQBGAQcATwECAFMBCgBgAQAAYwEDAGkBBABwAQAAcgEAAHUBAAB4AQEAfQEAAIIBBgCPAQMAlgEVAK4BBAC5AQAAwwEAAM0BBADTAQsA5AEDAOkBAQDsAQAA7wEEAPUBAgD5AbEArAItANwCAADeAgAA5QIYAAEDAAAIAwAACgMFABkDAgAdAwAAHwMEACYDAAAoAwUALwMAADEDCQA9AwAAPwMrAA==","P":[[5,"T"],[7,""],[11,"T"],[12,""],[22,"T"],[23,""],[32,"U"],[33,""],[43,"T"],[44,"U,T"],[45,"U"],[46,""],[103,"T"],[119,""],[126,"T"],[133,""],[154,"T"],[162,""],[184,"U"],[192,""],[197,"T"],[204,""],[208,"U,T"],[216,"U"],[224,""],[277,"T"],[281,""],[284,"T"],[285,""],[290,"T"],[292,""],[295,"U"],[297,""],[302,"T"],[303,"U,T"],[305,"U"],[307,""],[328,"T"],[330,""],[333,"T"],[334,""],[337,"U"],[338,""],[340,"U,T"],[341,"U"],[342,""],[354,"T"],[358,""],[361,"T"],[362,""],[373,"T"],[375,""],[381,"U"],[383,""],[385,"T"],[386,"U,T"],[388,"U"],[390,""],[405,"T"],[413,""],[416,"T"],[419,""],[434,"T"],[438,""],[441,"U"],[445,""],[460,"T"],[463,""],[466,"U,T"],[470,"U"],[474,""],[485,"T"],[487,""],[490,"T"],[491,""],[492,"U"],[493,""],[500,"U,T"],[501,"U"],[502,""],[684,"T"],[702,""],[712,"T"],[720,""],[741,"__D"],[748,""],[765,"T"],[768,""],[769,"T"],[775,""],[783,"U"],[792,""],[818,"__S"],[825,""],[839,"T"],[847,"U,T"],[856,"U"],[865,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[23751]}