var searchIndex = new Map(JSON.parse('[["xm125_radar_monitor",{"t":"SSCHHCCHCHHHCHHHCHPPPPPFPPGPPPGPPPPGGPPPPPPPGPPPGPPPPNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNONNNNNNNNNNNNNNNNNOOOONNNNNNNOOHOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOFFONNNNNNNNNNOONNNNOONNOOONNNNNNNNNNPPPPPPPPPPPPPGIPNNNNNNNNNNNNNNNOOOPPFGPNNNNNNNNNNONNNNONNNNNNNNNNONNNNNNNNNNNNNNNFONNNONNONNNNNNNNNNNNONNSSSSSSSSSSSSSPGFSSSSSSSSSSSSSSSSSSSPFSSSSSSSSSSSSSGPPFPPPPSPPPFGSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSPFFONONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNONNOONNNNNNNNNNNONNNNNNNNNNNNNNOOONNNNNNNNNOOONONOOOOONNNNONOOOONNNONNNNNNNNNNNONOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["APP_NAME","VERSION","cli","configure_detector","configure_radar_from_cli","device_manager","error","execute_command","firmware","get_current_firmware_info","get_current_firmware_info_for_check","handle_firmware_command","i2c","main","monitor_measurements","output_response","radar","run","Breathing","","","Calibrate","Check","Cli","Combined","","Commands","Config","Connect","Csv","DetectorMode","Disconnect","Distance","","Firmware","FirmwareAction","FirmwareType","Human","Info","Json","Long","Measure","Medium","Monitor","OutputFormat","Presence","","","PresenceRange","Short","Status","Update","Verify","augment_args","augment_args_for_update","augment_subcommands","","augment_subcommands_for_update","","auto_reconnect","auto_update_firmware","auto_verify_firmware","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","command","","command_for_update","control_script","firmware_path","fmt","","","","","","format","from","","","","","","","from_arg_matches","","","from_arg_matches_mut","","","get_i2c_device_path","group_id","has_subcommand","","i2c_address","i2c_bus","i2c_device","int_pin","into","","","","","","","mode","no_auto_reconnect","parse_i2c_address","quiet","timeout","to_owned","","","","","","to_possible_value","","","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","update_from_arg_matches","","","update_from_arg_matches_mut","","","value_variants","","","","verbose","wakeup_pin","action","count","force","frame_rate","interval","length","presence_range","save_to","sensitivity","start","firmware_type","","force","verify","DeviceManager","DeviceState","app_id","borrow","","borrow_mut","","check_device_presence","check_i2c_bus_presence","clone","clone_into","clone_to_uninit","extract_i2c_bus_number","firmware_manager","firmware_type","fmt","from","","get_device_info","i2c_address","i2c_device_path","into","","is_present","is_responsive","needs_reset","new","reset_to_run_mode","to_owned","try_from","","try_into","","type_id","","update_firmware","CalibrationRequired","Config","DeviceError","Err","I2c","InitializationFailed","InvalidParameters","InvalidResponse","Io","Json","MeasurementFailed","NotConnected","Ok","RadarError","Result","Timeout","borrow","borrow_mut","fmt","","from","","","","","into","source","to_string","try_from","try_into","type_id","message","response","timeout","Breathing","Distance","FirmwareManager","FirmwareType","Presence","application_id","binary_filename","borrow","","borrow_mut","","calculate_binary_checksum","clone","clone_into","clone_to_uninit","control_script","default","display_name","enter_bootloader_mode","eq","firmware_path","firmware_update_needed","flash_firmware","fmt","from","","","","from_app_id","get_firmware_checksum","get_firmware_path","i2c_address","into","","new","reset_to_run_mode","to_owned","try_from","","try_into","","type_id","","update_firmware","update_firmware_with_verification","verify_device_in_run_mode","verify_firmware","I2cDevice","address","borrow","borrow_mut","configure_gpio","device","export_gpio","from","int_pin","into","is_module_ready","new","read_gpio_value","read_register","set_gpio_direction","set_gpio_value","sleep_module","try_from","try_into","type_id","wake_up_module","wakeup_pin","write_read_register","write_register","BREATHING_DISTANCE_DETERMINATION_DURATION_S_DEFAULT","BREATHING_END_DEFAULT","BREATHING_FRAME_RATE_DEFAULT","BREATHING_HIGHEST_BREATHING_RATE_DEFAULT","BREATHING_HWAAS_DEFAULT","BREATHING_INTRA_DETECTION_THRESHOLD_DEFAULT","BREATHING_LOWEST_BREATHING_RATE_DEFAULT","BREATHING_NUM_DISTANCES_TO_ANALYZE_DEFAULT","BREATHING_PROFILE_DEFAULT","BREATHING_START_DEFAULT","BREATHING_SWEEPS_PER_FRAME_DEFAULT","BREATHING_TIME_SERIES_LENGTH_S_DEFAULT","BREATHING_USE_PRESENCE_PROCESSOR_DEFAULT","Breathing","BreathingAppState","BreathingMeasurement","CALIBRATION_TIMEOUT","CMD_APPLY_CONFIGURATION","CMD_APPLY_CONFIG_AND_CALIBRATE","CMD_BREATHING_APPLY_CONFIGURATION","CMD_BREATHING_START_APP","CMD_BREATHING_STOP_APP","CMD_CALIBRATE","CMD_DISABLE_CONTINUOUS_MODE","CMD_DISABLE_DETECTOR","CMD_ENABLE_CONTINUOUS_MODE","CMD_ENABLE_DETECTOR","CMD_ENABLE_PRESENCE_DETECTOR","CMD_MEASURE_DISTANCE","CMD_MEASURE_PRESENCE","CMD_PRESENCE_APPLY_CONFIGURATION","CMD_PRESENCE_START","CMD_PRESENCE_STOP","CMD_RECALIBRATE","CMD_RESET_MODULE","Combined","CombinedMeasurement","DISTANCE_CLOSE_RANGE_LEAKAGE_CANCELLATION_DEFAULT","DISTANCE_END_DEFAULT","DISTANCE_FIXED_AMPLITUDE_THRESHOLD_VALUE_DEFAULT","DISTANCE_FIXED_STRENGTH_THRESHOLD_VALUE_DEFAULT","DISTANCE_MAX_PROFILE_DEFAULT","DISTANCE_MAX_STEP_LENGTH_DEFAULT","DISTANCE_NUM_FRAMES_RECORDED_THRESHOLD_DEFAULT","DISTANCE_PEAK_SORTING_DEFAULT","DISTANCE_REFLECTOR_SHAPE_DEFAULT","DISTANCE_SIGNAL_QUALITY_DEFAULT","DISTANCE_START_DEFAULT","DISTANCE_THRESHOLD_METHOD_DEFAULT","DISTANCE_THRESHOLD_SENSITIVITY_DEFAULT","DetectorMode","DetermineDistance","Distance","DistanceMeasurement","EstimateBreathingRate","Init","IntraPresence","Long","MEASUREMENT_TIMEOUT","Medium","NoPresence","Presence","PresenceMeasurement","PresenceRange","REG_APPLICATION_ID","REG_BREATHING_APP_STATE","REG_BREATHING_DISTANCE_DETERMINATION_DURATION_S","REG_BREATHING_END","REG_BREATHING_FRAME_RATE","REG_BREATHING_HIGHEST_BREATHING_RATE","REG_BREATHING_HWAAS","REG_BREATHING_INTRA_DETECTION_THRESHOLD","REG_BREATHING_LOWEST_BREATHING_RATE","REG_BREATHING_NUM_DISTANCES_TO_ANALYZE","REG_BREATHING_PROFILE","REG_BREATHING_RATE","REG_BREATHING_RESULT","REG_BREATHING_START","REG_BREATHING_SWEEPS_PER_FRAME","REG_BREATHING_TIME_SERIES_LENGTH_S","REG_BREATHING_USE_PRESENCE_PROCESSOR","REG_CLOSE_RANGE_LEAKAGE_CANCELLATION","REG_COMMAND","REG_DETECTOR_STATUS","REG_DISTANCE_RESULT","REG_END_CONFIG","REG_FIXED_AMPLITUDE_THRESHOLD_VALUE","REG_FIXED_STRENGTH_THRESHOLD_VALUE","REG_FRAME_RATE","REG_INTER_DETECTION_THRESHOLD","REG_INTER_PRESENCE_SCORE","REG_INTRA_DETECTION_THRESHOLD","REG_INTRA_PRESENCE_SCORE","REG_MAX_PROFILE","REG_MAX_STEP_LENGTH","REG_MEASURE_COUNTER","REG_NUM_FRAMES_RECORDED_THRESHOLD","REG_PEAK0_DISTANCE","REG_PEAK0_STRENGTH","REG_PEAK_SORTING","REG_PRESENCE_DISTANCE","REG_PRESENCE_END","REG_PRESENCE_RESULT","REG_PRESENCE_START","REG_PROTOCOL_STATUS","REG_REFLECTOR_SHAPE","REG_SENSOR_INFO","REG_SIGNAL_QUALITY","REG_START_CONFIG","REG_THRESHOLD_METHOD","REG_THRESHOLD_SENSITIVITY","REG_VERSION","STATUS_ALL_ERROR_MASK","STATUS_ALL_OK_MASK","STATUS_BUSY","STATUS_CALIBRATION_DONE","STATUS_CONFIG_APPLY_ERROR","STATUS_CONFIG_APPLY_OK","STATUS_CONFIG_CREATE_ERROR","STATUS_CONFIG_CREATE_OK","STATUS_DETECTOR_CALIBRATE_ERROR","STATUS_DETECTOR_CREATE_ERROR","STATUS_DETECTOR_CREATE_OK","STATUS_DETECTOR_READY","STATUS_DISTANCE_BUSY","STATUS_DISTANCE_CALIBRATION_BUFFER_ERROR","STATUS_DISTANCE_CALIBRATION_BUFFER_OK","STATUS_DISTANCE_CONFIG_APPLY_ERROR","STATUS_DISTANCE_CONFIG_APPLY_OK","STATUS_DISTANCE_CONFIG_CREATE_ERROR","STATUS_DISTANCE_CONFIG_CREATE_OK","STATUS_DISTANCE_DETECTOR_BUFFER_ERROR","STATUS_DISTANCE_DETECTOR_BUFFER_OK","STATUS_DISTANCE_DETECTOR_CALIBRATE_ERROR","STATUS_DISTANCE_DETECTOR_CALIBRATE_OK","STATUS_DISTANCE_DETECTOR_CREATE_ERROR","STATUS_DISTANCE_DETECTOR_CREATE_OK","STATUS_DISTANCE_DETECTOR_ERROR","STATUS_DISTANCE_RSS_REGISTER_ERROR","STATUS_DISTANCE_RSS_REGISTER_OK","STATUS_DISTANCE_SENSOR_BUFFER_ERROR","STATUS_DISTANCE_SENSOR_BUFFER_OK","STATUS_DISTANCE_SENSOR_CALIBRATE_ERROR","STATUS_DISTANCE_SENSOR_CALIBRATE_OK","STATUS_DISTANCE_SENSOR_CREATE_ERROR","STATUS_DISTANCE_SENSOR_CREATE_OK","STATUS_ERROR","STATUS_MEASUREMENT_READY","STATUS_PRESENCE_BUSY","STATUS_PRESENCE_CONFIG_APPLY_ERROR","STATUS_PRESENCE_CONFIG_APPLY_OK","STATUS_PRESENCE_CONFIG_CREATE_ERROR","STATUS_PRESENCE_CONFIG_CREATE_OK","STATUS_PRESENCE_DETECTOR_BUFFER_ERROR","STATUS_PRESENCE_DETECTOR_BUFFER_OK","STATUS_PRESENCE_DETECTOR_CREATE_ERROR","STATUS_PRESENCE_DETECTOR_CREATE_OK","STATUS_PRESENCE_DETECTOR_ERROR","STATUS_PRESENCE_RSS_REGISTER_ERROR","STATUS_PRESENCE_RSS_REGISTER_OK","STATUS_PRESENCE_SENSOR_BUFFER_ERROR","STATUS_PRESENCE_SENSOR_BUFFER_OK","STATUS_PRESENCE_SENSOR_CALIBRATE_ERROR","STATUS_PRESENCE_SENSOR_CALIBRATE_OK","STATUS_PRESENCE_SENSOR_CREATE_ERROR","STATUS_PRESENCE_SENSOR_CREATE_OK","STATUS_RSS_REGISTER_OK","STATUS_SENSOR_CALIBRATE_ERROR","STATUS_SENSOR_CALIBRATE_OK","STATUS_SENSOR_CREATE_ERROR","STATUS_SENSOR_CREATE_OK","Short","XM125Config","XM125Radar","app_state","auto_connect","auto_reconnect","borrow","","","","","","","","","borrow_mut","","","","","","","","","breathing_rate","calibrate","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","config","configure_detector","configure_presence_range","connect","connect_async","continuous_mode","default","deserialize","","","","","","","detector_mode","disconnect","display_name","distance","","eq","","","fmt","","","","","","","","frame_rate","from","","","","","","","","","from_u32","get_detector_mode","get_info","get_status","get_status_raw","i2c","inter_detection_threshold","inter_presence_score","into","","","","","","","","","intra_detection_threshold","intra_presence_score","is_calibrated","is_connected","","is_continuous_monitoring","last_calibration","last_measurement","length_m","max_profile","max_step_length","measure_breathing","measure_combined","measure_distance","measure_presence","measurement_interval_ms","new","presence","presence_detected","presence_distance","presence_range","read_application_id","read_distance_result","reset_xm125_to_run_mode","result_ready","send_command","serialize","","","","","","","set_config","set_detector_mode","start_continuous_monitoring","start_m","stop_continuous_monitoring","strength","sweeps_per_frame","temperature","","threshold_sensitivity","timestamp","","","","to_owned","","","","","","","","try_from","","","","","","","","","try_into","","","","","","","","","type_id","","","","","","","","","validate_firmware_compatibility","wait_for_calibration","wait_for_measurement","write_breathing_configuration","write_distance_configuration"],"q":[[0,"xm125_radar_monitor"],[18,"xm125_radar_monitor::cli"],[182,"xm125_radar_monitor::cli::Commands"],[192,"xm125_radar_monitor::cli::FirmwareAction"],[196,"xm125_radar_monitor::device_manager"],[232,"xm125_radar_monitor::error"],[263,"xm125_radar_monitor::error::RadarError"],[266,"xm125_radar_monitor::firmware"],[313,"xm125_radar_monitor::i2c"],[337,"xm125_radar_monitor::radar"],[702,"core::option"],[703,"core::result"],[704,"clap_builder::builder::command"],[705,"alloc::string"],[706,"core::fmt"],[707,"clap_builder::parser::matches::arg_matches"],[708,"clap_builder"],[709,"clap_builder::util::id"],[710,"clap_builder::builder::possible_value"],[711,"core::any"],[712,"std::io::error"],[713,"linux_embedded_hal::i2c"],[714,"config::error"],[715,"serde_json::error"],[716,"core::error"],[717,"alloc::vec"],[718,"core::time"],[719,"serde_core::de"],[720,"serde_core::ser"],[721,"chrono::datetime"]],"i":"``````````````````AfBhBl2An`31`33Bj`4324``040l505`543`0522A`0636300006352410635241635241635241635241000006352410063524106306300630000063524100`006352415241063524106352410635241063063524100DdDfDhDj200200DlDn11``E`Eb10100111001101000011110010101010Ab00Hh111111110``1111111111111111F`FbFdAj0``000Ed101011100101000101111000010010101010000`Ff0000000000000000000000`````````````Gf`````````````````````0```````````````Gb1`000Gh`012`````````````````````````````````````````````````````````````````````````````````````````````````````````````0``G`fGd153GjGlGn75348621075354862107538621075386210753444444386210753472086786210753348621075374444431486210753314444443334444340113444548621075444342325321058621075348621075348621075348621075344444","f":"{{}b}0`{{{b{df}}{j{h}}{j{h}}{j{l}}{j{h}}{j{h}}}n}{{{b{df}}{b{A`}}}{{Ad{nAb}}}}``{{Af{b{df}}{b{A`}}}{{Ad{nAb}}}}`{{{b{df}}}{{Ad{AhAb}}}}{{{b{A`}}}{{Ad{{Al{AhAj}}Ab}}}}{{An{b{A`}}}{{Ad{nAb}}}}`{{}n}{{{b{df}}{b{A`}}B`{j{Ah}}}{{Ad{nAb}}}}{{{b{A`}}{b{Bb}}{b{Bb}}{b{Bb}}{b{Bb}}}{{Ad{nAb}}}}`{A`{{Ad{nAb}}}}```````````````````````````````````{BdBd}00000{A`Bf}00{b{{b{c}}}{}}000000{{{b{d}}}{{b{dc}}}{}}000000{{{b{Af}}}Af}{{{b{An}}}An}{{{b{Bh}}}Bh}{{{b{Bj}}}Bj}{{{b{Bl}}}Bl}{{{b{l}}}l}{{b{b{dc}}}n{}}00000{{bBn}n}00000{{}Bd}{A`j}1{A`C`}0{{{b{Af}}{b{dCb}}}Cd}{{{b{An}}{b{dCb}}}Cd}{{{b{Bh}}{b{dCb}}}Cd}{{{b{Bj}}{b{dCb}}}Cd}{{{b{Bl}}{b{dCb}}}Cd}{{{b{l}}{b{dCb}}}Cd}{A`Bj}{cc{}}000000{{{b{Cf}}}{{Ad{A`Ch}}}}{{{b{Cf}}}{{Ad{AfCh}}}}{{{b{Cf}}}{{Ad{AnCh}}}}{{{b{dCf}}}{{Ad{A`Ch}}}}{{{b{dCf}}}{{Ad{AfCh}}}}{{{b{dCf}}}{{Ad{AnCh}}}}{{{b{A`}}}C`}{{}{{j{Cj}}}}{{{b{Bb}}}Bf}0{A`Cl}{A`Bn}{A`j}0{{}c{}}000000{A`Bl}{A`Bf}{{{b{Bb}}}{{Ad{ClC`}}}}1{A`B`}{bc{}}00000{{{b{Bh}}}{{j{Cn}}}}{{{b{Bj}}}{{j{Cn}}}}{{{b{Bl}}}{{j{Cn}}}}{{{b{l}}}{{j{Cn}}}}{c{{Ad{e}}}{}{}}000000{{}{{Ad{c}}}{}}000000{bD`}000000{{{b{dA`}}{b{Cf}}}{{Ad{nCh}}}}{{{b{dAf}}{b{Cf}}}{{Ad{nCh}}}}{{{b{dAn}}{b{Cf}}}{{Ad{nCh}}}}{{{b{dA`}}{b{dCf}}}{{Ad{nCh}}}}{{{b{dAf}}{b{dCf}}}{{Ad{nCh}}}}{{{b{dAn}}{b{dCf}}}{{Ad{nCh}}}}{{}{{b{{Db{Bh}}}}}}{{}{{b{{Db{Bj}}}}}}{{}{{b{{Db{Bl}}}}}}{{}{{b{{Db{l}}}}}}{A`Bf}{A`j}{DdAn}{Dfj}{DhBf}{Djj}{DfB`}11311{DlBh}{Dnj}{DlBf}0``{E`j}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Eb}}}E`}{{{b{Eb}}Bn}Bf}{{{b{E`}}}E`}{{b{b{dc}}}n{}}{{bBn}n}{{{b{Eb}}}Bn}{EbEd}9{{{b{E`}}{b{dCb}}}Cd}{cc{}}0{{{b{Eb}}}{{Ad{C`Ab}}}}{EbCl}{EbC`}{{}c{}}0{E`Bf}00{{C`ClC`C`}Eb}{{{b{Eb}}}{{Ad{nAb}}}}{bc{}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bD`}0{{{b{Eb}}AjBf}{{Ad{nAb}}}}````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ab}}{b{dCb}}}Cd}0{EfAb}{EhAb}{EjAb}{cc{}}{ElAb}{{}c{}}{{{b{Ab}}}{{j{{b{En}}}}}}{bC`}>=<{F`C`}{FbC`}{FdB`}`````{AjAh}{Aj{{b{Bb}}}}??>>{{{b{Ed}}Aj}{{Ad{C`Ab}}}}{{{b{Aj}}}Aj}{{b{b{dc}}}n{}}{{bBn}n}{EdC`}{{}Ed}6{{{b{Ed}}}{{Ad{nAb}}}}{{{b{Aj}}{b{Aj}}}Bf}3{{{b{Ed}}AhAj}{{Ad{BfAb}}}}{{{b{Ed}}{b{Bb}}}{{Ad{nAb}}}}{{{b{Aj}}{b{dCb}}}Cd}{cc{}}0{BhAj}{BlAj}{AhAj}>{{{b{Ed}}Aj}C`}{EdCl}{{}c{}}0{{{b{Bb}}{b{Bb}}Cl}Ed}<{bc{}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bD`}0{{{b{Ed}}Aj}{{Ad{nAb}}}}{{{b{Ed}}AjBf}{{Ad{nAb}}}}{{{b{Ed}}}Bf}2`{FfCl}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{dFf}}{j{Ah}}{j{Ah}}}{{Ad{nAb}}}}{FfFh}{{{b{Ff}}Ah}{{Ad{nAb}}}}{cc{}}{Ffj}{{}c{}}{{{b{Ff}}}{{Ad{BfAb}}}}{{{b{Bb}}Cl}{{Ad{FfAb}}}}{{{b{Ff}}Ah}{{Ad{BnAb}}}}{{{b{dFf}}ClFj}{{Ad{{Fl{Bn}}Ab}}}}{{{b{Ff}}Ah{b{Bb}}}{{Ad{nAb}}}}{{{b{Ff}}AhBn}{{Ad{nAb}}}}{{{b{Ff}}}{{Ad{nAb}}}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bD`}3;{{{b{dFf}}Cl{b{{Db{Bn}}}}Fj}{{Ad{{Fl{Bn}}Ab}}}}{{{b{dFf}}Cl{b{{Db{Bn}}}}}{{Ad{nAb}}}}{{}Ah}000000000000```{{}Fn}111111111111111111``1111111111111````````0`````{{}Cl}0000000000000000000000000000000000000000000000022222222222222222222222222222222222222222222222222222222222```{G`Gb}{{{b{df}}}{{Ad{nAb}}}}{GdBf}{b{{b{c}}}{}}00000000{{{b{d}}}{{b{dc}}}{}}00000000{G`h}4{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{Gb}}}Gb}{{{b{G`}}}G`}{{{b{Gd}}}Gd}{{b{b{dc}}}n{}}0000000{{bBn}n}0000000{fGd}?{{{b{df}}}n}{{{b{df}}}{{Ad{nAb}}}}0{fBf}{{}Gd}{c{{Ad{Gf}}}H`}{c{{Ad{Gh}}}H`}{c{{Ad{Gj}}}H`}{c{{Ad{Gl}}}H`}{c{{Ad{Gn}}}H`}{c{{Ad{Gb}}}H`}{c{{Ad{G`}}}H`}{GdGf};{{{b{Gb}}}{{b{Bb}}}}{Gjh}{Gnj}{{{b{Gf}}{b{Gf}}}Bf}{{{b{Gh}}{b{Gh}}}Bf}{{{b{Gb}}{b{Gb}}}Bf}{{{b{Gf}}{b{dCb}}}Cd}{{{b{Gh}}{b{dCb}}}Cd}{{{b{Gj}}{b{dCb}}}Cd}{{{b{Gl}}{b{dCb}}}Cd}{{{b{Gn}}{b{dCb}}}Cd}{{{b{Gb}}{b{dCb}}}Cd}{{{b{G`}}{b{dCb}}}Cd}{{{b{Gd}}{b{dCb}}}Cd}{Gdh}{cc{}}00000000{AhGb}{{{b{f}}}Gf}{{{b{df}}}{{Ad{C`Ab}}}}0{{{b{df}}}{{Ad{AhAb}}}}{fFf}6{Glh}{{}c{}}0000000081{fBf}{{{b{f}}}Bf}10{fj}0;{GdBn}{GdCl}{{{b{df}}}{{Ad{G`Ab}}}}{{{b{df}}}{{Ad{GnAb}}}}{{{b{df}}}{{Ad{GjAb}}}}{{{b{df}}}{{Ad{GlAb}}}}{GdB`}{Fff}{Gnj}{GlBf}>{GdGh}{{{b{df}}}{{Ad{AhAb}}}}7{{{b{f}}}{{Ad{nAb}}}}{G`Bf}{{{b{df}}Ah}{{Ad{nAb}}}}{{{b{Gf}}c}AdHb}{{{b{Gh}}c}AdHb}{{{b{Gj}}c}AdHb}{{{b{Gl}}c}AdHb}{{{b{Gn}}c}AdHb}{{{b{Gb}}c}AdHb}{{{b{G`}}c}AdHb}{{{b{df}}Gd}n}{{{b{df}}Gf}{{Ad{nAb}}}}{{{b{df}}}{{Ad{nAb}}}}{Gdh}1{Gjh}{GdCl}{GjHd}{G`Hd}4{GjHf}{GlHf}{GnHf}{G`Hf}{bc{}}0000000{c{{Ad{e}}}{}{}}00000000{{}{{Ad{c}}}{}}00000000{bD`}00000000=====","D":"AD`","p":[[1,"reference",null,null,1],[0,"mut"],[5,"XM125Radar",337],[1,"f32"],[6,"Option",702,null,1],[6,"PresenceRange",18],[1,"unit"],[5,"Cli",18],[6,"RadarError",232],[6,"Result",703,null,1],[6,"Commands",18],[1,"u32"],[6,"FirmwareType",266],[1,"tuple",null,null,1],[6,"FirmwareAction",18],[1,"u64"],[1,"str"],[5,"Command",704],[1,"bool"],[6,"FirmwareType",18],[6,"OutputFormat",18],[6,"DetectorMode",18],[1,"u8"],[5,"String",705],[5,"Formatter",706],[8,"Result",706],[5,"ArgMatches",707],[8,"Error",708],[5,"Id",709],[1,"u16"],[5,"PossibleValue",710],[5,"TypeId",711],[1,"slice"],[15,"Firmware",182],[15,"Monitor",182],[15,"Connect",182],[15,"Config",182],[15,"Update",192],[15,"Verify",192],[5,"DeviceState",196],[5,"DeviceManager",196],[5,"FirmwareManager",266],[5,"Error",712],[5,"I2CError",713],[6,"ConfigError",714],[5,"Error",715],[10,"Error",716],[15,"DeviceError",263],[15,"InvalidResponse",263],[15,"Timeout",263],[5,"I2cDevice",313],[5,"I2cdev",713],[1,"usize"],[5,"Vec",717],[5,"Duration",718],[5,"BreathingMeasurement",337],[6,"BreathingAppState",337],[5,"XM125Config",337],[6,"DetectorMode",337],[6,"PresenceRange",337],[5,"DistanceMeasurement",337],[5,"PresenceMeasurement",337],[5,"CombinedMeasurement",337],[10,"Deserializer",719],[10,"Serializer",720],[1,"i16"],[5,"DateTime",721],[8,"Result",232]],"r":[],"b":[[250,"impl-Display-for-RadarError"],[251,"impl-Debug-for-RadarError"],[252,"impl-From%3CError%3E-for-RadarError"],[253,"impl-From%3CI2CError%3E-for-RadarError"],[254,"impl-From%3CConfigError%3E-for-RadarError"],[256,"impl-From%3CError%3E-for-RadarError"],[292,"impl-From%3CFirmwareType%3E-for-FirmwareType"],[293,"impl-From%3CDetectorMode%3E-for-FirmwareType"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB4CNwAAAAMABgADAA0ABQAYAAAAGwAAAB8AAAAkAAEALQAAADEAAAA2AAUAPwAiAGQABQByAAUAeQACAIwAKAC3AAAAxwAEAM4AAgDSAAIA2AABANwAAwDhAAYA6QACAO0ABwD2AAkAAQEAAAMBCQAPAQAAEgEDABcBBAAeAQEAIgEAACUBAQAqAQAALwEGADoBAwA/AQEAQgEAAEUBBABLAQIATwGxAAICLQAyAgAANAIZAFcCAABZAgUAaAICAGwCAABuAgQAdQIAAHcCBQB+AgAAgAIJAIwCAACOAisA","P":[[62,"T"],[76,""],[82,"T"],[88,""],[106,"T"],[113,""],[127,"U"],[134,""],[139,"T"],[145,""],[149,"U,T"],[156,"U"],[163,""],[199,"T"],[203,""],[206,"T"],[207,""],[212,"T"],[214,""],[217,"U"],[219,""],[224,"T"],[225,"U,T"],[227,"U"],[229,""],[248,"T"],[250,""],[255,"T"],[256,""],[257,"U"],[258,""],[260,"U,T"],[261,"U"],[262,""],[273,"T"],[277,""],[279,"T"],[280,""],[290,"T"],[292,""],[298,"U"],[300,""],[302,"T"],[303,"U,T"],[305,"U"],[307,""],[315,"T"],[317,""],[320,"T"],[321,""],[322,"U"],[323,""],[330,"U,T"],[331,"U"],[332,""],[514,"T"],[532,""],[542,"T"],[550,""],[565,"__D"],[572,""],[589,"T"],[598,""],[606,"U"],[615,""],[641,"__S"],[648,""],[662,"T"],[670,"U,T"],[679,"U"],[688,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[19385]}