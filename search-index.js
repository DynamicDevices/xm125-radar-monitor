var searchIndex = new Map(JSON.parse('[["xm125_radar_monitor",{"t":"SSCHHCCHCHHHCHHHHHHHCHPPPPPFPPGPPPGPPPPGGPPPPPPPGPPPGPPPPNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNONNNNNNNNNNNNNNNNNOOOONNNNNNNOOHOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOFFONNNNNNNNNNOONNNNOONNOOONNNNNNNNNNPPPPPPPPPPPPPPPGIPNNNNNNNNNNNNNNNOOOOPPFGPNNNNNNNNNNONNNNONNNNNNNNNNONNNNNNNNNNNNNNNFONNNONNONNNNNNNNNNNNONNSSSSSSSSSSSSSPGFSSSSSSSSSSSSSSSSSSSPFSSSSSSSSSSSSSGPPFPPPPSPPPFGSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSPFFONONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNONNOONNNNNNNNNNNONNNNNNNNNNNNNNOOONNNNNNNNNOOONONOOOOONNNNONOOOONNNONNNNNNNNNNNONOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["APP_NAME","VERSION","cli","configure_detector","configure_radar_from_cli","device_manager","error","execute_command","firmware","get_current_firmware_info","get_current_firmware_info_for_check","handle_firmware_command","i2c","is_likely_unprogrammed_module","main","monitor_measurements","output_response","print_banner","print_banner_with_detected_mode","print_unprogrammed_module_help","radar","run","Breathing","","","Calibrate","Check","Cli","Combined","","Commands","Config","Connect","Csv","DetectorMode","Disconnect","Distance","","Firmware","FirmwareAction","FirmwareType","Human","Info","Json","Long","Measure","Medium","Monitor","OutputFormat","Presence","","","PresenceRange","Short","Status","Update","Verify","augment_args","augment_args_for_update","augment_subcommands","","augment_subcommands_for_update","","auto_reconnect","auto_update_firmware","auto_verify_firmware","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","command","","command_for_update","control_script","firmware_path","fmt","","","","","","format","from","","","","","","","from_arg_matches","","","from_arg_matches_mut","","","get_i2c_device_path","group_id","has_subcommand","","i2c_address","i2c_bus","i2c_device","int_pin","into","","","","","","","mode","no_auto_reconnect","parse_i2c_address","quiet","timeout","to_owned","","","","","","to_possible_value","","","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","update_from_arg_matches","","","update_from_arg_matches_mut","","","value_variants","","","","verbose","wakeup_pin","action","count","force","frame_rate","interval","length","presence_range","save_to","sensitivity","start","firmware_type","","force","verify","DeviceManager","DeviceState","app_id","borrow","","borrow_mut","","check_device_presence","check_i2c_bus_presence","clone","clone_into","clone_to_uninit","extract_i2c_bus_number","firmware_manager","firmware_type","fmt","from","","get_device_info","i2c_address","i2c_device_path","into","","is_present","is_responsive","needs_reset","new","reset_to_run_mode","to_owned","try_from","","try_into","","type_id","","update_firmware","CalibrationRequired","Config","DeviceError","Err","FirmwareError","I2c","InitializationFailed","InvalidParameters","InvalidResponse","Io","Json","MeasurementFailed","ModuleNotProgrammed","NotConnected","Ok","RadarError","Result","Timeout","borrow","borrow_mut","fmt","","from","","","","","into","source","to_string","try_from","try_into","type_id","message","","response","timeout","Breathing","Distance","FirmwareManager","FirmwareType","Presence","application_id","binary_filename","borrow","","borrow_mut","","calculate_binary_checksum","clone","clone_into","clone_to_uninit","control_script","default","display_name","enter_bootloader_mode","eq","firmware_path","firmware_update_needed","flash_firmware","fmt","from","","","","from_app_id","get_firmware_checksum","get_firmware_path","i2c_address","into","","new","reset_to_run_mode","to_owned","try_from","","try_into","","type_id","","update_firmware","update_firmware_with_verification","verify_device_in_run_mode","verify_firmware","I2cDevice","address","borrow","borrow_mut","configure_gpio","device","export_gpio","from","int_pin","into","is_module_ready","new","read_gpio_value","read_register","set_gpio_direction","set_gpio_value","sleep_module","try_from","try_into","type_id","wake_up_module","wakeup_pin","write_read_register","write_register","BREATHING_DISTANCE_DETERMINATION_DURATION_S_DEFAULT","BREATHING_END_DEFAULT","BREATHING_FRAME_RATE_DEFAULT","BREATHING_HIGHEST_BREATHING_RATE_DEFAULT","BREATHING_HWAAS_DEFAULT","BREATHING_INTRA_DETECTION_THRESHOLD_DEFAULT","BREATHING_LOWEST_BREATHING_RATE_DEFAULT","BREATHING_NUM_DISTANCES_TO_ANALYZE_DEFAULT","BREATHING_PROFILE_DEFAULT","BREATHING_START_DEFAULT","BREATHING_SWEEPS_PER_FRAME_DEFAULT","BREATHING_TIME_SERIES_LENGTH_S_DEFAULT","BREATHING_USE_PRESENCE_PROCESSOR_DEFAULT","Breathing","BreathingAppState","BreathingMeasurement","CALIBRATION_TIMEOUT","CMD_APPLY_CONFIGURATION","CMD_APPLY_CONFIG_AND_CALIBRATE","CMD_BREATHING_APPLY_CONFIGURATION","CMD_BREATHING_START_APP","CMD_BREATHING_STOP_APP","CMD_CALIBRATE","CMD_DISABLE_CONTINUOUS_MODE","CMD_DISABLE_DETECTOR","CMD_ENABLE_CONTINUOUS_MODE","CMD_ENABLE_DETECTOR","CMD_ENABLE_PRESENCE_DETECTOR","CMD_MEASURE_DISTANCE","CMD_MEASURE_PRESENCE","CMD_PRESENCE_APPLY_CONFIGURATION","CMD_PRESENCE_START","CMD_PRESENCE_STOP","CMD_RECALIBRATE","CMD_RESET_MODULE","Combined","CombinedMeasurement","DISTANCE_CLOSE_RANGE_LEAKAGE_CANCELLATION_DEFAULT","DISTANCE_END_DEFAULT","DISTANCE_FIXED_AMPLITUDE_THRESHOLD_VALUE_DEFAULT","DISTANCE_FIXED_STRENGTH_THRESHOLD_VALUE_DEFAULT","DISTANCE_MAX_PROFILE_DEFAULT","DISTANCE_MAX_STEP_LENGTH_DEFAULT","DISTANCE_NUM_FRAMES_RECORDED_THRESHOLD_DEFAULT","DISTANCE_PEAK_SORTING_DEFAULT","DISTANCE_REFLECTOR_SHAPE_DEFAULT","DISTANCE_SIGNAL_QUALITY_DEFAULT","DISTANCE_START_DEFAULT","DISTANCE_THRESHOLD_METHOD_DEFAULT","DISTANCE_THRESHOLD_SENSITIVITY_DEFAULT","DetectorMode","DetermineDistance","Distance","DistanceMeasurement","EstimateBreathingRate","Init","IntraPresence","Long","MEASUREMENT_TIMEOUT","Medium","NoPresence","Presence","PresenceMeasurement","PresenceRange","REG_APPLICATION_ID","REG_BREATHING_APP_STATE","REG_BREATHING_DISTANCE_DETERMINATION_DURATION_S","REG_BREATHING_END","REG_BREATHING_FRAME_RATE","REG_BREATHING_HIGHEST_BREATHING_RATE","REG_BREATHING_HWAAS","REG_BREATHING_INTRA_DETECTION_THRESHOLD","REG_BREATHING_LOWEST_BREATHING_RATE","REG_BREATHING_NUM_DISTANCES_TO_ANALYZE","REG_BREATHING_PROFILE","REG_BREATHING_RATE","REG_BREATHING_RESULT","REG_BREATHING_START","REG_BREATHING_SWEEPS_PER_FRAME","REG_BREATHING_TIME_SERIES_LENGTH_S","REG_BREATHING_USE_PRESENCE_PROCESSOR","REG_CLOSE_RANGE_LEAKAGE_CANCELLATION","REG_COMMAND","REG_DETECTOR_STATUS","REG_DISTANCE_RESULT","REG_END_CONFIG","REG_FIXED_AMPLITUDE_THRESHOLD_VALUE","REG_FIXED_STRENGTH_THRESHOLD_VALUE","REG_FRAME_RATE","REG_INTER_DETECTION_THRESHOLD","REG_INTER_PRESENCE_SCORE","REG_INTRA_DETECTION_THRESHOLD","REG_INTRA_PRESENCE_SCORE","REG_MAX_PROFILE","REG_MAX_STEP_LENGTH","REG_MEASURE_COUNTER","REG_NUM_FRAMES_RECORDED_THRESHOLD","REG_PEAK0_DISTANCE","REG_PEAK0_STRENGTH","REG_PEAK_SORTING","REG_PRESENCE_DISTANCE","REG_PRESENCE_END","REG_PRESENCE_RESULT","REG_PRESENCE_START","REG_PROTOCOL_STATUS","REG_REFLECTOR_SHAPE","REG_SENSOR_INFO","REG_SIGNAL_QUALITY","REG_START_CONFIG","REG_THRESHOLD_METHOD","REG_THRESHOLD_SENSITIVITY","REG_VERSION","STATUS_ALL_ERROR_MASK","STATUS_ALL_OK_MASK","STATUS_BUSY","STATUS_CALIBRATION_DONE","STATUS_CONFIG_APPLY_ERROR","STATUS_CONFIG_APPLY_OK","STATUS_CONFIG_CREATE_ERROR","STATUS_CONFIG_CREATE_OK","STATUS_DETECTOR_CALIBRATE_ERROR","STATUS_DETECTOR_CREATE_ERROR","STATUS_DETECTOR_CREATE_OK","STATUS_DETECTOR_READY","STATUS_DISTANCE_BUSY","STATUS_DISTANCE_CALIBRATION_BUFFER_ERROR","STATUS_DISTANCE_CALIBRATION_BUFFER_OK","STATUS_DISTANCE_CONFIG_APPLY_ERROR","STATUS_DISTANCE_CONFIG_APPLY_OK","STATUS_DISTANCE_CONFIG_CREATE_ERROR","STATUS_DISTANCE_CONFIG_CREATE_OK","STATUS_DISTANCE_DETECTOR_BUFFER_ERROR","STATUS_DISTANCE_DETECTOR_BUFFER_OK","STATUS_DISTANCE_DETECTOR_CALIBRATE_ERROR","STATUS_DISTANCE_DETECTOR_CALIBRATE_OK","STATUS_DISTANCE_DETECTOR_CREATE_ERROR","STATUS_DISTANCE_DETECTOR_CREATE_OK","STATUS_DISTANCE_DETECTOR_ERROR","STATUS_DISTANCE_RSS_REGISTER_ERROR","STATUS_DISTANCE_RSS_REGISTER_OK","STATUS_DISTANCE_SENSOR_BUFFER_ERROR","STATUS_DISTANCE_SENSOR_BUFFER_OK","STATUS_DISTANCE_SENSOR_CALIBRATE_ERROR","STATUS_DISTANCE_SENSOR_CALIBRATE_OK","STATUS_DISTANCE_SENSOR_CREATE_ERROR","STATUS_DISTANCE_SENSOR_CREATE_OK","STATUS_ERROR","STATUS_MEASUREMENT_READY","STATUS_PRESENCE_BUSY","STATUS_PRESENCE_CONFIG_APPLY_ERROR","STATUS_PRESENCE_CONFIG_APPLY_OK","STATUS_PRESENCE_CONFIG_CREATE_ERROR","STATUS_PRESENCE_CONFIG_CREATE_OK","STATUS_PRESENCE_DETECTOR_BUFFER_ERROR","STATUS_PRESENCE_DETECTOR_BUFFER_OK","STATUS_PRESENCE_DETECTOR_CREATE_ERROR","STATUS_PRESENCE_DETECTOR_CREATE_OK","STATUS_PRESENCE_DETECTOR_ERROR","STATUS_PRESENCE_RSS_REGISTER_ERROR","STATUS_PRESENCE_RSS_REGISTER_OK","STATUS_PRESENCE_SENSOR_BUFFER_ERROR","STATUS_PRESENCE_SENSOR_BUFFER_OK","STATUS_PRESENCE_SENSOR_CALIBRATE_ERROR","STATUS_PRESENCE_SENSOR_CALIBRATE_OK","STATUS_PRESENCE_SENSOR_CREATE_ERROR","STATUS_PRESENCE_SENSOR_CREATE_OK","STATUS_RSS_REGISTER_OK","STATUS_SENSOR_CALIBRATE_ERROR","STATUS_SENSOR_CALIBRATE_OK","STATUS_SENSOR_CREATE_ERROR","STATUS_SENSOR_CREATE_OK","Short","XM125Config","XM125Radar","app_state","auto_connect","auto_reconnect","borrow","","","","","","","","","borrow_mut","","","","","","","","","breathing_rate","calibrate","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","config","configure_detector","configure_presence_range","connect","connect_async","continuous_mode","default","deserialize","","","","","","","detector_mode","disconnect","display_name","distance","","eq","","","fmt","","","","","","","","frame_rate","from","","","","","","","","","from_u32","get_detector_mode","get_info","get_status","get_status_raw","i2c","inter_detection_threshold","inter_presence_score","into","","","","","","","","","intra_detection_threshold","intra_presence_score","is_calibrated","is_connected","","is_continuous_monitoring","last_calibration","last_measurement","length_m","max_profile","max_step_length","measure_breathing","measure_combined","measure_distance","measure_presence","measurement_interval_ms","new","presence","presence_detected","presence_distance","presence_range","read_application_id","read_distance_result","reset_xm125_to_run_mode","result_ready","send_command","serialize","","","","","","","set_config","set_detector_mode","start_continuous_monitoring","start_m","stop_continuous_monitoring","strength","sweeps_per_frame","temperature","","threshold_sensitivity","timestamp","","","","to_owned","","","","","","","","try_from","","","","","","","","","try_into","","","","","","","","","type_id","","","","","","","","","validate_firmware_compatibility","wait_for_calibration","wait_for_measurement","write_breathing_configuration","write_distance_configuration"],"q":[[0,"xm125_radar_monitor"],[22,"xm125_radar_monitor::cli"],[186,"xm125_radar_monitor::cli::Commands"],[196,"xm125_radar_monitor::cli::FirmwareAction"],[200,"xm125_radar_monitor::device_manager"],[236,"xm125_radar_monitor::error"],[269,"xm125_radar_monitor::error::RadarError"],[273,"xm125_radar_monitor::firmware"],[320,"xm125_radar_monitor::i2c"],[344,"xm125_radar_monitor::radar"],[709,"core::option"],[710,"core::result"],[711,"clap_builder::builder::command"],[712,"alloc::string"],[713,"core::fmt"],[714,"clap_builder::parser::matches::arg_matches"],[715,"clap_builder"],[716,"clap_builder::util::id"],[717,"clap_builder::builder::possible_value"],[718,"core::any"],[719,"linux_embedded_hal::i2c"],[720,"std::io::error"],[721,"config::error"],[722,"serde_json::error"],[723,"core::error"],[724,"alloc::vec"],[725,"core::time"],[726,"serde_core::de"],[727,"serde_core::ser"],[728,"chrono::datetime"]],"i":"``````````````````````AfBhBl2An`31`33Bj`4324``040l505`543`0522A`0636300006352410635241635241635241635241000006352410063524106306300630000063524100`006352415241063524106352410635241063063524100DdDfDhDj200200DlDn11``E`Eb10100111001101000011110010101010Ab00Hj11111111110``1111111111111111F`FbFdFfAj0``000Ed101011100101000101111000010010101010000`Fh0000000000000000000000`````````````Gh`````````````````````0```````````````Gd1`000Gj`012`````````````````````````````````````````````````````````````````````````````````````````````````````````````0``GbfGf153GlGnH`75348621075354862107538621075386210753444444386210753472086786210753348621075374444431486210753314444443334444340113444548621075444342325321058621075348621075348621075348621075344444","f":"{{}b}0`{{{b{df}}{j{h}}{j{h}}{j{l}}{j{h}}{j{h}}}n}{{{b{df}}{b{A`}}}{{Ad{nAb}}}}``{{Af{b{df}}{b{A`}}}{{Ad{nAb}}}}`{{{b{df}}}{{Ad{AhAb}}}}{{{b{A`}}}{{Ad{{Al{AhAj}}Ab}}}}{{An{b{A`}}}{{Ad{nAb}}}}`{{{b{A`}}}B`}{{}n}{{{b{df}}{b{A`}}Bb{j{Ah}}}{{Ad{nAb}}}}{{{b{A`}}{b{Bd}}{b{Bd}}{b{Bd}}{b{Bd}}}{{Ad{nAb}}}}{{{b{A`}}}n}{{{b{A`}}{j{{b{Bd}}}}}n}1`{A`{{Ad{nAb}}}}```````````````````````````````````{BfBf}00000{A`B`}00{b{{b{c}}}{}}000000{{{b{d}}}{{b{dc}}}{}}000000{{{b{Af}}}Af}{{{b{An}}}An}{{{b{Bh}}}Bh}{{{b{Bj}}}Bj}{{{b{Bl}}}Bl}{{{b{l}}}l}{{b{b{dc}}}n{}}00000{{bBn}n}00000{{}Bf}{A`j}1{A`C`}0{{{b{Af}}{b{dCb}}}Cd}{{{b{An}}{b{dCb}}}Cd}{{{b{Bh}}{b{dCb}}}Cd}{{{b{Bj}}{b{dCb}}}Cd}{{{b{Bl}}{b{dCb}}}Cd}{{{b{l}}{b{dCb}}}Cd}{A`Bj}{cc{}}000000{{{b{Cf}}}{{Ad{A`Ch}}}}{{{b{Cf}}}{{Ad{AfCh}}}}{{{b{Cf}}}{{Ad{AnCh}}}}{{{b{dCf}}}{{Ad{A`Ch}}}}{{{b{dCf}}}{{Ad{AfCh}}}}{{{b{dCf}}}{{Ad{AnCh}}}}{{{b{A`}}}C`}{{}{{j{Cj}}}}{{{b{Bd}}}B`}0{A`Cl}{A`Bn}{A`j}0{{}c{}}000000{A`Bl}{A`B`}{{{b{Bd}}}{{Ad{ClC`}}}}1{A`Bb}{bc{}}00000{{{b{Bh}}}{{j{Cn}}}}{{{b{Bj}}}{{j{Cn}}}}{{{b{Bl}}}{{j{Cn}}}}{{{b{l}}}{{j{Cn}}}}{c{{Ad{e}}}{}{}}000000{{}{{Ad{c}}}{}}000000{bD`}000000{{{b{dA`}}{b{Cf}}}{{Ad{nCh}}}}{{{b{dAf}}{b{Cf}}}{{Ad{nCh}}}}{{{b{dAn}}{b{Cf}}}{{Ad{nCh}}}}{{{b{dA`}}{b{dCf}}}{{Ad{nCh}}}}{{{b{dAf}}{b{dCf}}}{{Ad{nCh}}}}{{{b{dAn}}{b{dCf}}}{{Ad{nCh}}}}{{}{{b{{Db{Bh}}}}}}{{}{{b{{Db{Bj}}}}}}{{}{{b{{Db{Bl}}}}}}{{}{{b{{Db{l}}}}}}{A`B`}{A`j}{DdAn}{Dfj}{DhB`}{Djj}{DfBb}11311{DlBh}{Dnj}{DlB`}0``{E`j}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Eb}}}E`}{{{b{Eb}}Bn}B`}{{{b{E`}}}E`}{{b{b{dc}}}n{}}{{bBn}n}{{{b{Eb}}}Bn}{EbEd}9{{{b{E`}}{b{dCb}}}Cd}{cc{}}0{{{b{Eb}}}{{Ad{C`Ab}}}}{EbCl}{EbC`}{{}c{}}0{E`B`}00{{C`ClC`C`}Eb}{{{b{Eb}}}{{Ad{nAb}}}}{bc{}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bD`}0{{{b{Eb}}AjB`}{{Ad{nAb}}}}``````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ab}}{b{dCb}}}Cd}0?{EfAb}{EhAb}{EjAb}{ElAb}?{{{b{Ab}}}{{j{{b{En}}}}}}{bC`}<;:{F`C`}{FbC`}{FdC`}{FfBb}`````{AjAh}{Aj{{b{Bd}}}}>>=={{{b{Ed}}Aj}{{Ad{C`Ab}}}}{{{b{Aj}}}Aj}{{b{b{dc}}}n{}}{{bBn}n}{EdC`}{{}Ed}6{{{b{Ed}}}{{Ad{nAb}}}}{{{b{Aj}}{b{Aj}}}B`}3{{{b{Ed}}AhAj}{{Ad{B`Ab}}}}{{{b{Ed}}{b{Bd}}}{{Ad{nAb}}}}{{{b{Aj}}{b{dCb}}}Cd}{cc{}}0{BhAj}{BlAj}{AhAj}>{{{b{Ed}}Aj}C`}{EdCl}{{}c{}}0{{{b{Bd}}{b{Bd}}Cl}Ed}<{bc{}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bD`}0{{{b{Ed}}Aj}{{Ad{nAb}}}}{{{b{Ed}}AjB`}{{Ad{nAb}}}}{{{b{Ed}}}B`}2`{FhCl}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{dFh}}{j{Ah}}{j{Ah}}}{{Ad{nAb}}}}{FhFj}{{{b{Fh}}Ah}{{Ad{nAb}}}}{cc{}}{Fhj}{{}c{}}{{{b{Fh}}}{{Ad{B`Ab}}}}{{{b{Bd}}Cl}{{Ad{FhAb}}}}{{{b{Fh}}Ah}{{Ad{BnAb}}}}{{{b{dFh}}ClFl}{{Ad{{Fn{Bn}}Ab}}}}{{{b{Fh}}Ah{b{Bd}}}{{Ad{nAb}}}}{{{b{Fh}}AhBn}{{Ad{nAb}}}}{{{b{Fh}}}{{Ad{nAb}}}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bD`}3;{{{b{dFh}}Cl{b{{Db{Bn}}}}Fl}{{Ad{{Fn{Bn}}Ab}}}}{{{b{dFh}}Cl{b{{Db{Bn}}}}}{{Ad{nAb}}}}{{}Ah}000000000000```{{}G`}111111111111111111``1111111111111````````0`````{{}Cl}0000000000000000000000000000000000000000000000022222222222222222222222222222222222222222222222222222222222```{GbGd}{{{b{df}}}{{Ad{nAb}}}}{GfB`}{b{{b{c}}}{}}00000000{{{b{d}}}{{b{dc}}}{}}00000000{Gbh}4{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Gd}}}Gd}{{{b{Gb}}}Gb}{{{b{Gf}}}Gf}{{b{b{dc}}}n{}}0000000{{bBn}n}0000000{fGf}?{{{b{df}}}n}{{{b{df}}}{{Ad{nAb}}}}0{fB`}{{}Gf}{c{{Ad{Gh}}}Hb}{c{{Ad{Gj}}}Hb}{c{{Ad{Gl}}}Hb}{c{{Ad{Gn}}}Hb}{c{{Ad{H`}}}Hb}{c{{Ad{Gd}}}Hb}{c{{Ad{Gb}}}Hb}{GfGh};{{{b{Gd}}}{{b{Bd}}}}{Glh}{H`j}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gh}}{b{dCb}}}Cd}{{{b{Gj}}{b{dCb}}}Cd}{{{b{Gl}}{b{dCb}}}Cd}{{{b{Gn}}{b{dCb}}}Cd}{{{b{H`}}{b{dCb}}}Cd}{{{b{Gd}}{b{dCb}}}Cd}{{{b{Gb}}{b{dCb}}}Cd}{{{b{Gf}}{b{dCb}}}Cd}{Gfh}{cc{}}00000000{AhGd}{{{b{f}}}Gh}{{{b{df}}}{{Ad{C`Ab}}}}0{{{b{df}}}{{Ad{AhAb}}}}{fFh}6{Gnh}{{}c{}}0000000081{fB`}{{{b{f}}}B`}10{fj}0;{GfBn}{GfCl}{{{b{df}}}{{Ad{GbAb}}}}{{{b{df}}}{{Ad{H`Ab}}}}{{{b{df}}}{{Ad{GlAb}}}}{{{b{df}}}{{Ad{GnAb}}}}{GfBb}{Fhf}{H`j}{GnB`}>{GfGj}{{{b{df}}}{{Ad{AhAb}}}}7{{{b{f}}}{{Ad{nAb}}}}{GbB`}{{{b{df}}Ah}{{Ad{nAb}}}}{{{b{Gh}}c}AdHd}{{{b{Gj}}c}AdHd}{{{b{Gl}}c}AdHd}{{{b{Gn}}c}AdHd}{{{b{H`}}c}AdHd}{{{b{Gd}}c}AdHd}{{{b{Gb}}c}AdHd}{{{b{df}}Gf}n}{{{b{df}}Gh}{{Ad{nAb}}}}{{{b{df}}}{{Ad{nAb}}}}{Gfh}1{Glh}{GfCl}{GlHf}{GbHf}4{GlHh}{GnHh}{H`Hh}{GbHh}{bc{}}0000000{c{{Ad{e}}}{}{}}00000000{{}{{Ad{c}}}{}}00000000{bD`}00000000=====","D":"ADd","p":[[1,"reference",null,null,1],[0,"mut"],[5,"XM125Radar",344],[1,"f32"],[6,"Option",709,null,1],[6,"PresenceRange",22],[1,"unit"],[5,"Cli",22],[6,"RadarError",236],[6,"Result",710,null,1],[6,"Commands",22],[1,"u32"],[6,"FirmwareType",273],[1,"tuple",null,null,1],[6,"FirmwareAction",22],[1,"bool"],[1,"u64"],[1,"str"],[5,"Command",711],[6,"FirmwareType",22],[6,"OutputFormat",22],[6,"DetectorMode",22],[1,"u8"],[5,"String",712],[5,"Formatter",713],[8,"Result",713],[5,"ArgMatches",714],[8,"Error",715],[5,"Id",716],[1,"u16"],[5,"PossibleValue",717],[5,"TypeId",718],[1,"slice"],[15,"Firmware",186],[15,"Monitor",186],[15,"Connect",186],[15,"Config",186],[15,"Update",196],[15,"Verify",196],[5,"DeviceState",200],[5,"DeviceManager",200],[5,"FirmwareManager",273],[5,"I2CError",719],[5,"Error",720],[6,"ConfigError",721],[5,"Error",722],[10,"Error",723],[15,"DeviceError",269],[15,"FirmwareError",269],[15,"InvalidResponse",269],[15,"Timeout",269],[5,"I2cDevice",320],[5,"I2cdev",719],[1,"usize"],[5,"Vec",724],[5,"Duration",725],[5,"BreathingMeasurement",344],[6,"BreathingAppState",344],[5,"XM125Config",344],[6,"DetectorMode",344],[6,"PresenceRange",344],[5,"DistanceMeasurement",344],[5,"PresenceMeasurement",344],[5,"CombinedMeasurement",344],[10,"Deserializer",726],[10,"Serializer",727],[1,"i16"],[5,"DateTime",728],[8,"Result",236]],"r":[],"b":[[256,"impl-Debug-for-RadarError"],[257,"impl-Display-for-RadarError"],[259,"impl-From%3CI2CError%3E-for-RadarError"],[260,"impl-From%3CError%3E-for-RadarError"],[261,"impl-From%3CConfigError%3E-for-RadarError"],[262,"impl-From%3CError%3E-for-RadarError"],[299,"impl-From%3CFirmwareType%3E-for-FirmwareType"],[300,"impl-From%3CDetectorMode%3E-for-FirmwareType"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACMCOQAAAAMABgADAA0AAAAPAAQAFQABABwAAAAfAAAAIwAAACgAAQAxAAAANQAAADoABQBDACIAaAAFAHYABQB9AAIAkAAoALsAAADLAAQA0gACANYAAgDcAAEA4AADAOUABgDtAAIA8QAJAPwABgAEAQMACQEKABYBAAAZAQMAHgEEACUBAQApAQAALAEBADEBAAA2AQYAQQEDAEYBAQBJAQAATAEEAFIBAgBWAbEACQItADkCAAA7AhkAXgIAAGACBQBvAgIAcwIAAHUCBAB8AgAAfgIFAIUCAACHAgkAkwIAAJUCKwA=","P":[[66,"T"],[80,""],[86,"T"],[92,""],[110,"T"],[117,""],[131,"U"],[138,""],[143,"T"],[149,""],[153,"U,T"],[160,"U"],[167,""],[203,"T"],[207,""],[210,"T"],[211,""],[216,"T"],[218,""],[221,"U"],[223,""],[228,"T"],[229,"U,T"],[231,"U"],[233,""],[254,"T"],[256,""],[258,"T"],[259,""],[263,"U"],[264,""],[266,"U,T"],[267,"U"],[268,""],[280,"T"],[284,""],[286,"T"],[287,""],[297,"T"],[299,""],[305,"U"],[307,""],[309,"T"],[310,"U,T"],[312,"U"],[314,""],[322,"T"],[324,""],[327,"T"],[328,""],[329,"U"],[330,""],[337,"U,T"],[338,"U"],[339,""],[521,"T"],[539,""],[549,"T"],[557,""],[572,"__D"],[579,""],[596,"T"],[605,""],[613,"U"],[622,""],[648,"__S"],[655,""],[669,"T"],[677,"U,T"],[686,"U"],[695,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[19639]}