var searchIndex = new Map(JSON.parse('[["xm125_radar_monitor",{"t":"SPGPSNNHHCNNNHHCNCHCNNHHHHHHCNHHHHHHHCHNNNNPPPPPPPFPPGPPPGPPPPPGGPPPPPPPGPPPGPPPPNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNONNNNNNNNNNNNNNNNNOOOONNNNNNNOOHOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOFFONNNNNNNNNNOONNNNOONNOOONNNNNNNNNNPPPPPPPPPPPPPPPGIPNNNNNNNNNNNNNNNOOOOPPFGPNNNNNNNNNNNONNNNNONNNNNNNNNNONNNNNNNNNNNNNNNFONNNONNONNNNNNNNNNNNONNSSSSSSSSSSSSSPGFSSSSSSSSSSSSSSSSSSSPFSSSSSSSSSSSSSGPPFPPPPSPPPFGSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSPFFONONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNONNOONNNNNNNNNNNONNNNNNNNNNNNNNOOONNNNNNNNNOOONONOOOOONNNNONOOOONNNONNNNNNNNNNNONOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["APP_NAME","BootloaderMode","DeviceMode","RunMode","VERSION","borrow","borrow_mut","check_control_script","check_device_presence","cli","clone","clone_into","clone_to_uninit","configure_detector","configure_radar_from_cli","device_manager","eq","error","execute_command","firmware","fmt","from","get_current_firmware_info","get_current_firmware_info_for_check","handle_bootloader_command","handle_firmware_checksum_command","handle_firmware_command","handle_firmware_erase_command","i2c","into","is_likely_unprogrammed_module","main","monitor_measurements","output_response","print_banner","print_banner_with_detected_mode","print_unprogrammed_module_help","radar","run","to_owned","try_from","try_into","type_id","Bootloader","Breathing","","","Calibrate","Check","Checksum","Cli","Combined","","Commands","Config","Connect","Csv","DetectorMode","Disconnect","Distance","","Erase","Firmware","FirmwareAction","FirmwareType","Human","Info","Json","Long","Measure","Medium","Monitor","OutputFormat","Presence","","","PresenceRange","Short","Status","Update","Verify","augment_args","augment_args_for_update","augment_subcommands","","augment_subcommands_for_update","","auto_reconnect","auto_update_firmware","auto_verify_firmware","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","command","","command_for_update","control_script","firmware_path","fmt","","","","","","format","from","","","","","","","from_arg_matches","","","from_arg_matches_mut","","","get_i2c_device_path","group_id","has_subcommand","","i2c_address","i2c_bus","i2c_device","int_pin","into","","","","","","","mode","no_auto_reconnect","parse_i2c_address","quiet","timeout","to_owned","","","","","","to_possible_value","","","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","update_from_arg_matches","","","update_from_arg_matches_mut","","","value_variants","","","","verbose","wakeup_pin","action","count","force","frame_rate","interval","length","presence_range","reset","save_to","sensitivity","start","confirm","firmware_type","","","force","verbose","verify","DeviceManager","DeviceState","app_id","borrow","","borrow_mut","","check_device_presence","check_i2c_bus_presence","clone","clone_into","clone_to_uninit","extract_i2c_bus_number","firmware_manager","firmware_type","fmt","from","","get_device_info","i2c_address","i2c_device_path","into","","is_present","is_responsive","needs_reset","new","reset_to_run_mode","to_owned","try_from","","try_into","","type_id","","update_firmware","CalibrationRequired","Config","DeviceError","Err","FirmwareError","I2c","InitializationFailed","InvalidParameters","InvalidResponse","Io","Json","MeasurementFailed","ModuleNotProgrammed","NotConnected","Ok","RadarError","Result","Timeout","borrow","borrow_mut","fmt","","from","","","","","into","source","to_string","try_from","try_into","type_id","message","","response","timeout","Breathing","Distance","FirmwareManager","FirmwareType","Presence","application_id","binary_filename","borrow","","borrow_mut","","calculate_binary_checksum","check_control_script","clone","clone_into","clone_to_uninit","control_script","default","display_name","enter_bootloader_mode","eq","erase_chip","firmware_path","firmware_update_needed","flash_firmware","fmt","from","","","","from_app_id","get_firmware_checksum","get_firmware_path","i2c_address","into","","new","reset_to_run_mode","to_owned","try_from","","try_into","","type_id","","update_firmware","update_firmware_with_verification","verify_device_in_run_mode","verify_firmware","I2cDevice","address","borrow","borrow_mut","configure_gpio","device","export_gpio","from","int_pin","into","is_module_ready","new","read_gpio_value","read_register","set_gpio_direction","set_gpio_value","sleep_module","try_from","try_into","type_id","wake_up_module","wakeup_pin","write_read_register","write_register","BREATHING_DISTANCE_DETERMINATION_DURATION_S_DEFAULT","BREATHING_END_DEFAULT","BREATHING_FRAME_RATE_DEFAULT","BREATHING_HIGHEST_BREATHING_RATE_DEFAULT","BREATHING_HWAAS_DEFAULT","BREATHING_INTRA_DETECTION_THRESHOLD_DEFAULT","BREATHING_LOWEST_BREATHING_RATE_DEFAULT","BREATHING_NUM_DISTANCES_TO_ANALYZE_DEFAULT","BREATHING_PROFILE_DEFAULT","BREATHING_START_DEFAULT","BREATHING_SWEEPS_PER_FRAME_DEFAULT","BREATHING_TIME_SERIES_LENGTH_S_DEFAULT","BREATHING_USE_PRESENCE_PROCESSOR_DEFAULT","Breathing","BreathingAppState","BreathingMeasurement","CALIBRATION_TIMEOUT","CMD_APPLY_CONFIGURATION","CMD_APPLY_CONFIG_AND_CALIBRATE","CMD_BREATHING_APPLY_CONFIGURATION","CMD_BREATHING_START_APP","CMD_BREATHING_STOP_APP","CMD_CALIBRATE","CMD_DISABLE_CONTINUOUS_MODE","CMD_DISABLE_DETECTOR","CMD_ENABLE_CONTINUOUS_MODE","CMD_ENABLE_DETECTOR","CMD_ENABLE_PRESENCE_DETECTOR","CMD_MEASURE_DISTANCE","CMD_MEASURE_PRESENCE","CMD_PRESENCE_APPLY_CONFIGURATION","CMD_PRESENCE_START","CMD_PRESENCE_STOP","CMD_RECALIBRATE","CMD_RESET_MODULE","Combined","CombinedMeasurement","DISTANCE_CLOSE_RANGE_LEAKAGE_CANCELLATION_DEFAULT","DISTANCE_END_DEFAULT","DISTANCE_FIXED_AMPLITUDE_THRESHOLD_VALUE_DEFAULT","DISTANCE_FIXED_STRENGTH_THRESHOLD_VALUE_DEFAULT","DISTANCE_MAX_PROFILE_DEFAULT","DISTANCE_MAX_STEP_LENGTH_DEFAULT","DISTANCE_NUM_FRAMES_RECORDED_THRESHOLD_DEFAULT","DISTANCE_PEAK_SORTING_DEFAULT","DISTANCE_REFLECTOR_SHAPE_DEFAULT","DISTANCE_SIGNAL_QUALITY_DEFAULT","DISTANCE_START_DEFAULT","DISTANCE_THRESHOLD_METHOD_DEFAULT","DISTANCE_THRESHOLD_SENSITIVITY_DEFAULT","DetectorMode","DetermineDistance","Distance","DistanceMeasurement","EstimateBreathingRate","Init","IntraPresence","Long","MEASUREMENT_TIMEOUT","Medium","NoPresence","Presence","PresenceMeasurement","PresenceRange","REG_APPLICATION_ID","REG_BREATHING_APP_STATE","REG_BREATHING_DISTANCE_DETERMINATION_DURATION_S","REG_BREATHING_END","REG_BREATHING_FRAME_RATE","REG_BREATHING_HIGHEST_BREATHING_RATE","REG_BREATHING_HWAAS","REG_BREATHING_INTRA_DETECTION_THRESHOLD","REG_BREATHING_LOWEST_BREATHING_RATE","REG_BREATHING_NUM_DISTANCES_TO_ANALYZE","REG_BREATHING_PROFILE","REG_BREATHING_RATE","REG_BREATHING_RESULT","REG_BREATHING_START","REG_BREATHING_SWEEPS_PER_FRAME","REG_BREATHING_TIME_SERIES_LENGTH_S","REG_BREATHING_USE_PRESENCE_PROCESSOR","REG_CLOSE_RANGE_LEAKAGE_CANCELLATION","REG_COMMAND","REG_DETECTOR_STATUS","REG_DISTANCE_RESULT","REG_END_CONFIG","REG_FIXED_AMPLITUDE_THRESHOLD_VALUE","REG_FIXED_STRENGTH_THRESHOLD_VALUE","REG_FRAME_RATE","REG_INTER_DETECTION_THRESHOLD","REG_INTER_PRESENCE_SCORE","REG_INTRA_DETECTION_THRESHOLD","REG_INTRA_PRESENCE_SCORE","REG_MAX_PROFILE","REG_MAX_STEP_LENGTH","REG_MEASURE_COUNTER","REG_NUM_FRAMES_RECORDED_THRESHOLD","REG_PEAK0_DISTANCE","REG_PEAK0_STRENGTH","REG_PEAK_SORTING","REG_PRESENCE_DISTANCE","REG_PRESENCE_END","REG_PRESENCE_RESULT","REG_PRESENCE_START","REG_PROTOCOL_STATUS","REG_REFLECTOR_SHAPE","REG_SENSOR_INFO","REG_SIGNAL_QUALITY","REG_START_CONFIG","REG_THRESHOLD_METHOD","REG_THRESHOLD_SENSITIVITY","REG_VERSION","STATUS_ALL_ERROR_MASK","STATUS_ALL_OK_MASK","STATUS_BUSY","STATUS_CALIBRATION_DONE","STATUS_CONFIG_APPLY_ERROR","STATUS_CONFIG_APPLY_OK","STATUS_CONFIG_CREATE_ERROR","STATUS_CONFIG_CREATE_OK","STATUS_DETECTOR_CALIBRATE_ERROR","STATUS_DETECTOR_CREATE_ERROR","STATUS_DETECTOR_CREATE_OK","STATUS_DETECTOR_READY","STATUS_DISTANCE_BUSY","STATUS_DISTANCE_CALIBRATION_BUFFER_ERROR","STATUS_DISTANCE_CALIBRATION_BUFFER_OK","STATUS_DISTANCE_CONFIG_APPLY_ERROR","STATUS_DISTANCE_CONFIG_APPLY_OK","STATUS_DISTANCE_CONFIG_CREATE_ERROR","STATUS_DISTANCE_CONFIG_CREATE_OK","STATUS_DISTANCE_DETECTOR_BUFFER_ERROR","STATUS_DISTANCE_DETECTOR_BUFFER_OK","STATUS_DISTANCE_DETECTOR_CALIBRATE_ERROR","STATUS_DISTANCE_DETECTOR_CALIBRATE_OK","STATUS_DISTANCE_DETECTOR_CREATE_ERROR","STATUS_DISTANCE_DETECTOR_CREATE_OK","STATUS_DISTANCE_DETECTOR_ERROR","STATUS_DISTANCE_RSS_REGISTER_ERROR","STATUS_DISTANCE_RSS_REGISTER_OK","STATUS_DISTANCE_SENSOR_BUFFER_ERROR","STATUS_DISTANCE_SENSOR_BUFFER_OK","STATUS_DISTANCE_SENSOR_CALIBRATE_ERROR","STATUS_DISTANCE_SENSOR_CALIBRATE_OK","STATUS_DISTANCE_SENSOR_CREATE_ERROR","STATUS_DISTANCE_SENSOR_CREATE_OK","STATUS_ERROR","STATUS_MEASUREMENT_READY","STATUS_PRESENCE_BUSY","STATUS_PRESENCE_CONFIG_APPLY_ERROR","STATUS_PRESENCE_CONFIG_APPLY_OK","STATUS_PRESENCE_CONFIG_CREATE_ERROR","STATUS_PRESENCE_CONFIG_CREATE_OK","STATUS_PRESENCE_DETECTOR_BUFFER_ERROR","STATUS_PRESENCE_DETECTOR_BUFFER_OK","STATUS_PRESENCE_DETECTOR_CREATE_ERROR","STATUS_PRESENCE_DETECTOR_CREATE_OK","STATUS_PRESENCE_DETECTOR_ERROR","STATUS_PRESENCE_RSS_REGISTER_ERROR","STATUS_PRESENCE_RSS_REGISTER_OK","STATUS_PRESENCE_SENSOR_BUFFER_ERROR","STATUS_PRESENCE_SENSOR_BUFFER_OK","STATUS_PRESENCE_SENSOR_CALIBRATE_ERROR","STATUS_PRESENCE_SENSOR_CALIBRATE_OK","STATUS_PRESENCE_SENSOR_CREATE_ERROR","STATUS_PRESENCE_SENSOR_CREATE_OK","STATUS_RSS_REGISTER_OK","STATUS_SENSOR_CALIBRATE_ERROR","STATUS_SENSOR_CALIBRATE_OK","STATUS_SENSOR_CREATE_ERROR","STATUS_SENSOR_CREATE_OK","Short","XM125Config","XM125Radar","app_state","auto_connect","auto_reconnect","borrow","","","","","","","","","borrow_mut","","","","","","","","","breathing_rate","calibrate","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","config","configure_detector","configure_presence_range","connect","connect_async","continuous_mode","default","deserialize","","","","","","","detector_mode","disconnect","display_name","distance","","eq","","","fmt","","","","","","","","frame_rate","from","","","","","","","","","from_u32","get_detector_mode","get_info","get_status","get_status_raw","i2c","inter_detection_threshold","inter_presence_score","into","","","","","","","","","intra_detection_threshold","intra_presence_score","is_calibrated","is_connected","","is_continuous_monitoring","last_calibration","last_measurement","length_m","max_profile","max_step_length","measure_breathing","measure_combined","measure_distance","measure_presence","measurement_interval_ms","new","presence","presence_detected","presence_distance","presence_range","read_application_id","read_distance_result","reset_xm125_to_run_mode","result_ready","send_command","serialize","","","","","","","set_config","set_detector_mode","start_continuous_monitoring","start_m","stop_continuous_monitoring","strength","sweeps_per_frame","temperature","","threshold_sensitivity","timestamp","","","","to_owned","","","","","","","","try_from","","","","","","","","","try_into","","","","","","","","","type_id","","","","","","","","","validate_firmware_compatibility","wait_for_calibration","wait_for_measurement","write_breathing_configuration","write_distance_configuration"],"q":[[0,"xm125_radar_monitor"],[43,"xm125_radar_monitor::cli"],[210,"xm125_radar_monitor::cli::Commands"],[221,"xm125_radar_monitor::cli::FirmwareAction"],[228,"xm125_radar_monitor::device_manager"],[264,"xm125_radar_monitor::error"],[297,"xm125_radar_monitor::error::RadarError"],[301,"xm125_radar_monitor::firmware"],[350,"xm125_radar_monitor::i2c"],[374,"xm125_radar_monitor::radar"],[739,"core::result"],[740,"core::option"],[741,"core::fmt"],[742,"core::any"],[743,"clap_builder::builder::command"],[744,"alloc::string"],[745,"clap_builder::parser::matches::arg_matches"],[746,"clap_builder"],[747,"clap_builder::util::id"],[748,"clap_builder::builder::possible_value"],[749,"linux_embedded_hal::i2c"],[750,"std::io::error"],[751,"config::error"],[752,"serde_json::error"],[753,"core::error"],[754,"alloc::vec"],[755,"core::time"],[756,"serde_core::de"],[757,"serde_core::ser"],[758,"chrono::datetime"]],"i":"`A``0`00```000```0```00```````0`````````0000An0BjCf2Bl0`31`33Cd`43214``040Aj505`543`0522n0636300006352410635241635241635241635241000006352410063524106306300630000063524100`006352415241063524106352410635241063063524100DfDhDjDl200Dn311E`EbEdEf202``EhEj10100111001101000011110010101010j00Ib11111111110``1111111111111111FhFjFlFnBf0``000El10100111001010000101111000010010101010000`G`0000000000000000000000`````````````H``````````````````````0```````````````Gl1`000Hb`012`````````````````````````````````````````````````````````````````````````````````````````````````````````````0``GjAdGn153HdHfHh75348621075354862107538621075386210753444444386210753472086786210753348621075374444431486210753314444443334444340113444548621075444342325321058621075348621075348621075348621075344444","f":"{{}b}```0{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}{{l{hj}}}}{{{b{n}}}{{l{A`j}}}}`{{{b{A`}}}A`}{{b{b{dc}}}h{}}{{bAb}h}{{{b{dAd}}{Ah{Af}}{Ah{Af}}{Ah{Aj}}{Ah{Af}}{Ah{Af}}}h}{{{b{dAd}}{b{n}}}{{l{hj}}}}`{{{b{A`}}{b{A`}}}Al}`{{An{b{dAd}}{b{n}}}{{l{hj}}}}`{{{b{A`}}{b{dB`}}}Bb}{cc{}}{{{b{dAd}}}{{l{Bdj}}}}{{{b{n}}}{{l{{Bh{BdBf}}j}}}}{{Al{b{n}}}{{l{hj}}}}{{{Ah{Bj}}Al{b{n}}}{{l{hj}}}}{{Bl{b{n}}}{{l{hj}}}}2`{{}c{}}{{{b{n}}}Al}{{}h}{{{b{dAd}}{b{n}}Bn{Ah{Bd}}}{{l{hj}}}}{{{b{n}}{b{f}}{b{f}}{b{f}}{b{f}}}{{l{hj}}}}{{{b{n}}}h}{{{b{n}}{Ah{{b{f}}}}}h}1`{n{{l{hj}}}}{bc{}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{bC`}``````````````````````````````````````{CbCb}00000{nAl}00{b{{b{c}}}{}}000000{{{b{d}}}{{b{dc}}}{}}000000{{{b{An}}}An}{{{b{Bl}}}Bl}{{{b{Bj}}}Bj}{{{b{Cd}}}Cd}{{{b{Cf}}}Cf}{{{b{Aj}}}Aj}{{b{b{dc}}}h{}}00000{{bAb}h}00000{{}Cb}{nAh}1{nCh}0{{{b{An}}{b{dB`}}}Bb}{{{b{Bl}}{b{dB`}}}Bb}{{{b{Bj}}{b{dB`}}}Bb}{{{b{Cd}}{b{dB`}}}Bb}{{{b{Cf}}{b{dB`}}}Bb}{{{b{Aj}}{b{dB`}}}Bb}{nCd}{cc{}}000000{{{b{Cj}}}{{l{nCl}}}}{{{b{Cj}}}{{l{AnCl}}}}{{{b{Cj}}}{{l{BlCl}}}}{{{b{dCj}}}{{l{nCl}}}}{{{b{dCj}}}{{l{AnCl}}}}{{{b{dCj}}}{{l{BlCl}}}}{{{b{n}}}Ch}{{}{{Ah{Cn}}}}{{{b{f}}}Al}0{nD`}{nAb}{nAh}0{{}c{}}000000{nCf}{nAl}{{{b{f}}}{{l{D`Ch}}}}1{nBn}{bc{}}00000{{{b{Bj}}}{{Ah{Db}}}}{{{b{Cd}}}{{Ah{Db}}}}{{{b{Cf}}}{{Ah{Db}}}}{{{b{Aj}}}{{Ah{Db}}}}{c{{l{e}}}{}{}}000000{{}{{l{c}}}{}}000000{bC`}000000{{{b{dn}}{b{Cj}}}{{l{hCl}}}}{{{b{dAn}}{b{Cj}}}{{l{hCl}}}}{{{b{dBl}}{b{Cj}}}{{l{hCl}}}}{{{b{dn}}{b{dCj}}}{{l{hCl}}}}{{{b{dAn}}{b{dCj}}}{{l{hCl}}}}{{{b{dBl}}{b{dCj}}}{{l{hCl}}}}{{}{{b{{Dd{Bj}}}}}}{{}{{b{{Dd{Cd}}}}}}{{}{{b{{Dd{Cf}}}}}}{{}{{b{{Dd{Aj}}}}}}{nAl}{nAh}{DfBl}{DhAh}{DjAl}{DlAh}{DhBn}11{DnAl}422{E`Al}{EbBj}{EdAh}{EfAh}{EbAl}{EfAl}1``{EhAh}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Ej}}}Eh}{{{b{Ej}}Ab}Al}{{{b{Eh}}}Eh}{{b{b{dc}}}h{}}{{bAb}h}{{{b{Ej}}}Ab}{EjEl}9{{{b{Eh}}{b{dB`}}}Bb}{cc{}}0{{{b{Ej}}}{{l{Chj}}}}{EjD`}{EjCh}{{}c{}}0{EhAl}00{{ChD`ChCh}Ej}{{{b{Ej}}}{{l{hj}}}}{bc{}}{c{{l{e}}}{}{}}0{{}{{l{c}}}{}}0{bC`}0{{{b{Ej}}BfAl}{{l{hj}}}}``````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{j}}{b{dB`}}}Bb}0{Enj}{F`j}{Fbj}{Fdj}{cc{}}{{}c{}}{{{b{j}}}{{Ah{{b{Ff}}}}}}{bCh}>=<{FhCh}{FjCh}{FlCh}{FnBn}`````{BfBd}{Bf{{b{f}}}}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{El}}Bf}{{l{Chj}}}}{{{b{El}}}{{l{hj}}}}{{{b{Bf}}}Bf}{{b{b{dc}}}h{}}{{bAb}h}{ElCh}{{}El}95{{{b{Bf}}{b{Bf}}}Al}62{{{b{El}}BdBf}{{l{Alj}}}}{{{b{El}}{b{f}}}{{l{hj}}}}{{{b{Bf}}{b{dB`}}}Bb}{cc{}}0{CfBf}{BjBf}{BdBf}>{{{b{El}}Bf}Ch}{ElD`}{{}c{}}0{{{b{f}}{b{f}}D`}El}{{{b{El}}}{{l{hj}}}}{bc{}}{c{{l{e}}}{}{}}0{{}{{l{c}}}{}}0{bC`}0{{{b{El}}Bf}{{l{hj}}}}{{{b{El}}BfAl}{{l{hj}}}}{{{b{El}}}Al}2`{G`D`}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{dG`}}{Ah{Bd}}{Ah{Bd}}}{{l{hj}}}}{G`Gb}{{{b{G`}}Bd}{{l{hj}}}}{cc{}}{G`Ah}{{}c{}}{{{b{G`}}}{{l{Alj}}}}{{{b{f}}D`}{{l{G`j}}}}{{{b{G`}}Bd}{{l{Abj}}}}{{{b{dG`}}D`Gd}{{l{{Gf{Ab}}j}}}}{{{b{G`}}Bd{b{f}}}{{l{hj}}}}{{{b{G`}}BdAb}{{l{hj}}}}{{{b{G`}}}{{l{hj}}}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{bC`}3;{{{b{dG`}}D`{b{{Dd{Ab}}}}Gd}{{l{{Gf{Ab}}j}}}}{{{b{dG`}}D`{b{{Dd{Ab}}}}}{{l{hj}}}}{{}Bd}000000000000```{{}Gh}111111111111111111``1111111111111````````0`````{{}D`}0000000000000000000000000000000000000000000000022222222222222222222222222222222222222222222222222222222222```{GjGl}{{{b{dAd}}}{{l{hj}}}}{GnAl}{b{{b{c}}}{}}00000000{{{b{d}}}{{b{dc}}}{}}00000000{GjAf}4{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Gl}}}Gl}{{{b{Gj}}}Gj}{{{b{Gn}}}Gn}{{b{b{dc}}}h{}}0000000{{bAb}h}0000000{AdGn}?{{{b{dAd}}}h}{{{b{dAd}}}{{l{hj}}}}0{AdAl}{{}Gn}{c{{l{H`}}}Hj}{c{{l{Hb}}}Hj}{c{{l{Hd}}}Hj}{c{{l{Hf}}}Hj}{c{{l{Hh}}}Hj}{c{{l{Gl}}}Hj}{c{{l{Gj}}}Hj}{GnH`};{{{b{Gl}}}{{b{f}}}}{HdAf}{HhAh}{{{b{H`}}{b{H`}}}Al}{{{b{Hb}}{b{Hb}}}Al}{{{b{Gl}}{b{Gl}}}Al}{{{b{H`}}{b{dB`}}}Bb}{{{b{Hb}}{b{dB`}}}Bb}{{{b{Hd}}{b{dB`}}}Bb}{{{b{Hf}}{b{dB`}}}Bb}{{{b{Hh}}{b{dB`}}}Bb}{{{b{Gl}}{b{dB`}}}Bb}{{{b{Gj}}{b{dB`}}}Bb}{{{b{Gn}}{b{dB`}}}Bb}{GnAf}{cc{}}00000000{BdGl}{{{b{Ad}}}H`}{{{b{dAd}}}{{l{Chj}}}}0{{{b{dAd}}}{{l{Bdj}}}}{AdG`}6{HfAf}{{}c{}}0000000081{AdAl}{{{b{Ad}}}Al}10{AdAh}0;{GnAb}{GnD`}{{{b{dAd}}}{{l{Gjj}}}}{{{b{dAd}}}{{l{Hhj}}}}{{{b{dAd}}}{{l{Hdj}}}}{{{b{dAd}}}{{l{Hfj}}}}{GnBn}{G`Ad}{HhAh}{HfAl}>{GnHb}{{{b{dAd}}}{{l{Bdj}}}}7{{{b{Ad}}}{{l{hj}}}}{GjAl}{{{b{dAd}}Bd}{{l{hj}}}}{{{b{H`}}c}lHl}{{{b{Hb}}c}lHl}{{{b{Hd}}c}lHl}{{{b{Hf}}c}lHl}{{{b{Hh}}c}lHl}{{{b{Gl}}c}lHl}{{{b{Gj}}c}lHl}{{{b{dAd}}Gn}h}{{{b{dAd}}H`}{{l{hj}}}}{{{b{dAd}}}{{l{hj}}}}{GnAf}1{HdAf}{GnD`}{HdHn}{GjHn}4{HdI`}{HfI`}{HhI`}{GjI`}{bc{}}0000000{c{{l{e}}}{}{}}00000000{{}{{l{c}}}{}}00000000{bC`}00000000=====","D":"AFd","p":[[1,"reference",null,null,1],[0,"mut"],[1,"str"],[1,"unit"],[6,"RadarError",264],[6,"Result",739,null,1],[5,"Cli",43],[6,"DeviceMode",0],[1,"u8"],[5,"XM125Radar",374],[1,"f32"],[6,"Option",740,null,1],[6,"PresenceRange",43],[1,"bool"],[6,"Commands",43],[5,"Formatter",741],[8,"Result",741],[1,"u32"],[6,"FirmwareType",301],[1,"tuple",null,null,1],[6,"FirmwareType",43],[6,"FirmwareAction",43],[1,"u64"],[5,"TypeId",742],[5,"Command",743],[6,"OutputFormat",43],[6,"DetectorMode",43],[5,"String",744],[5,"ArgMatches",745],[8,"Error",746],[5,"Id",747],[1,"u16"],[5,"PossibleValue",748],[1,"slice"],[15,"Firmware",210],[15,"Monitor",210],[15,"Connect",210],[15,"Config",210],[15,"Bootloader",210],[15,"Erase",221],[15,"Update",221],[15,"Verify",221],[15,"Checksum",221],[5,"DeviceState",228],[5,"DeviceManager",228],[5,"FirmwareManager",301],[5,"I2CError",749],[5,"Error",750],[6,"ConfigError",751],[5,"Error",752],[10,"Error",753],[15,"DeviceError",297],[15,"FirmwareError",297],[15,"InvalidResponse",297],[15,"Timeout",297],[5,"I2cDevice",350],[5,"I2cdev",749],[1,"usize"],[5,"Vec",754],[5,"Duration",755],[5,"BreathingMeasurement",374],[6,"BreathingAppState",374],[5,"XM125Config",374],[6,"DetectorMode",374],[6,"PresenceRange",374],[5,"DistanceMeasurement",374],[5,"PresenceMeasurement",374],[5,"CombinedMeasurement",374],[10,"Deserializer",756],[10,"Serializer",757],[1,"i16"],[5,"DateTime",758],[8,"Result",264]],"r":[],"b":[[284,"impl-Debug-for-RadarError"],[285,"impl-Display-for-RadarError"],[286,"impl-From%3CI2CError%3E-for-RadarError"],[287,"impl-From%3CError%3E-for-RadarError"],[288,"impl-From%3CConfigError%3E-for-RadarError"],[289,"impl-From%3CError%3E-for-RadarError"],[329,"impl-From%3CDetectorMode%3E-for-FirmwareType"],[330,"impl-From%3CFirmwareType%3E-for-FirmwareType"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADECOgAAAAcACgADABAABQAdAAAAIAAEACYABQAzAAAANgAAADoAAABAAAEASQAAAE0AAABSAAUAWwAiAIAABQCOAAUAlQACAKgAKADTAAAA5wAEAO4AAgDyAAIA+AABAPwAAwABAQYACQECAA0BCQAYAQoAJQEKADIBAAA1AQMAOwEEAEIBAABEAQAARwEAAEoBAQBPAQAAVAEGAF8BAwBkAQEAZwEAAGoBBABwAQIAdAGxACcCLQBXAgAAWQIZAHwCAAB+AgUAjQICAJECAACTAgQAmgIAAJwCBQCjAgAApQIJALECAACzAisA","P":[[5,"T"],[7,""],[11,"T"],[12,""],[21,"T"],[22,""],[29,"U"],[30,""],[39,"T"],[40,"U,T"],[41,"U"],[42,""],[90,"T"],[104,""],[110,"T"],[116,""],[134,"T"],[141,""],[155,"U"],[162,""],[167,"T"],[173,""],[177,"U,T"],[184,"U"],[191,""],[231,"T"],[235,""],[238,"T"],[239,""],[244,"T"],[246,""],[249,"U"],[251,""],[256,"T"],[257,"U,T"],[259,"U"],[261,""],[282,"T"],[284,""],[290,"T"],[291,"U"],[292,""],[294,"U,T"],[295,"U"],[296,""],[308,"T"],[312,""],[315,"T"],[316,""],[327,"T"],[329,""],[335,"U"],[337,""],[339,"T"],[340,"U,T"],[342,"U"],[344,""],[352,"T"],[354,""],[357,"T"],[358,""],[359,"U"],[360,""],[367,"U,T"],[368,"U"],[369,""],[551,"T"],[569,""],[579,"T"],[587,""],[602,"__D"],[609,""],[626,"T"],[635,""],[643,"U"],[652,""],[678,"__S"],[685,""],[699,"T"],[707,"U,T"],[716,"U"],[725,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[20544]}